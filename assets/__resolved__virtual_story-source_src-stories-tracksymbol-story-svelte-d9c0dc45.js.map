{"version":3,"file":"__resolved__virtual_story-source_src-stories-tracksymbol-story-svelte-d9c0dc45.js","sources":["../../../../../../../../__resolved__virtual:story-source:src-stories-tracksymbol-story-svelte"],"sourcesContent":["export default \"<script lang=\\\"ts\\\">\\n    import type {Hst} from '@histoire/plugin-svelte';\\n    import {onMount} from 'svelte';\\n    import L, {Map as LeafletMap} from 'leaflet';\\n    import TrackSymbol from '../';\\n\\n    export let Hst: Hst;\\n\\n    const p1 = [1.229, 103.813];\\n    const p2 = [1.239, 103.854];\\n\\n    let mapElement: HTMLDivElement;\\n    let map: LeafletMap;\\n    let ts1: TrackSymbol;\\n    let ts2: TrackSymbol;\\n    let center = [1.251, 103.826];\\n\\n    let heading1 = 320;\\n    let course1 = 45;\\n    let speed1 = 2.0;\\n    let heading2 = 120;\\n    let course2 = 240;\\n    let speed2 = 5.0\\n\\n    $: {\\n        if (ts1) {\\n            ts1.setHeading(toRadians(heading1));\\n            ts1.setCourse(toRadians(course1));\\n            ts1.setSpeed(normalize(speed1));\\n        }\\n    }\\n    $: {\\n        if (ts2) {\\n            ts2.setHeading(toRadians(heading2));\\n            ts2.setCourse(toRadians(course2));\\n            ts2.setSpeed(normalize(speed2));\\n        }\\n    }\\n    $: {\\n        if (map) {\\n            map.setView(center);\\n        }\\n    }\\n\\n    onMount(() => {\\n        if (!mapElement) {\\n            return;\\n        }\\n        map = L.map(mapElement, {\\n            center: center,\\n            zoom: 13,\\n        });\\n        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\\n            attribution: '&copy; <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors',\\n        })\\n            .addTo(map);\\n\\n        ts1 = new TrackSymbol(p1, {\\n            fill: true,\\n            fillColor: 'yellow',\\n            fillOpacity: 1,\\n            heading: toRadians(heading1),\\n            course: toRadians(course1),\\n            speed: normalize(speed1),\\n        });\\n        ts1.bindTooltip(\\\"TrackSymbol1\\\");\\n        ts1\\n            .addTo(map);\\n\\n        ts2 = new TrackSymbol(p2, {\\n            fill: true,\\n            fillColor: 'red',\\n            fillOpacity: 1,\\n            shapeOptions: {\\n                shapeSetEntries: [{\\n                    shapeSet: {\\n                        withHeading: {\\n                            points: [[1, 0.5], [0.75, 1], [0, 1], [0, 0], [0.75, 0]],\\n                            center: [30, 40],\\n                            length: 110,\\n                            breadth: 60,\\n                            units: \\\"meters\\\",\\n                        },\\n                        withoutHeading: TrackSymbol.createShape(TrackSymbol.DEFAULT_NOHEADING_SHAPE_POINTS, 24),\\n                    },\\n                    minZoomLevel: 14,\\n                }],\\n                defaultShapeSet: TrackSymbol.createShapeSet(24),\\n            },\\n            heading: toRadians(heading2),\\n            course: toRadians(course2),\\n            speed: normalize(speed2),\\n        });\\n        ts2.bindTooltip(\\\"TrackSymbol2\\\");\\n        ts2\\n            .addTo(map);\\n    });\\n\\n    function toRadians(degs: number | null | undefined): number | undefined {\\n        if ((degs === null) || (degs === undefined)) {\\n            return undefined;\\n        }\\n        return degs * Math.PI / 180;\\n    }\\n\\n    function normalize(value: number | null | undefined): number | undefined {\\n        if ((value === null) || (value === undefined)) {\\n            return undefined;\\n        }\\n        return value;\\n    }\\n</script>\\n\\n<style global>\\n    html,\\n    body,\\n    div#app,\\n    div#app > div,\\n    div#app > div > div,\\n    div#map {\\n        width: 100%;\\n        height: 100%;\\n        margin: 0;\\n        padding: 0;\\n    }\\n</style>\\n\\n<Hst.Story group=\\\"layers\\\">\\n    <div bind:this={mapElement} id=\\\"map\\\">\\n    </div>\\n\\n    <svelte:fragment slot=\\\"controls\\\">\\n        <h3>TrackSymbol1</h3>\\n        <Hst.Number bind:value={heading1} title=\\\"Heading (deg)\\\" />\\n        <Hst.Number bind:value={course1} title=\\\"Course (deg)\\\" />\\n        <Hst.Number bind:value={speed1} title=\\\"Speed (m/s)\\\" />\\n        <button class=\\\"htw-p-2\\\" on:click={() => center = p1}>Locate</button>\\n\\n        <h3>TrackSymbol2</h3>\\n        <Hst.Number bind:value={heading2} title=\\\"Heading (deg)\\\" />\\n        <Hst.Number bind:value={course2} title=\\\"Course (deg)\\\" />\\n        <Hst.Number bind:value={speed2} title=\\\"Speed (m/s)\\\" />\\n        <button class=\\\"htw-p-2\\\" on:click={() => center = p2}>Locate</button>\\n    </svelte:fragment>\\n</Hst.Story>\\n\""],"names":[],"mappings":"AAAA,MAAe,m}