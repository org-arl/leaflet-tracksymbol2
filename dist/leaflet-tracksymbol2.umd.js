(function(Z,T){typeof exports=="object"&&typeof module<"u"?T(exports,require("leaflet")):typeof define=="function"&&define.amd?define(["exports","leaflet"],T):(Z=typeof globalThis<"u"?globalThis:Z||self,T(Z["leaflet-tracksymbol2"]={},Z.L))})(this,function(Z,T){"use strict";const Je={CCW:-1,CW:1,NOT_ORIENTABLE:0},Ke=2*Math.PI,xt=1,ge=0,M=2,tn=3,en=4,nn=1,rn=2,Dt=0,Ot=1,lt=2;var Nt=Object.freeze({CCW:!0,CW:!1,ORIENTATION:Je,PIx2:Ke,INSIDE:xt,OUTSIDE:ge,BOUNDARY:M,CONTAINS:tn,INTERLACE:en,OVERLAP_SAME:nn,OVERLAP_OPPOSITE:rn,NOT_VERTEX:Dt,START_VERTEX:Ot,END_VERTEX:lt});let $=1e-6;function _e(r){$=r}function me(){return $}const sn=3;function zt(r){return r<$&&r>-$}function rt(r,t){return r-t<$&&r-t>-$}function Ee(r,t){return r-t>$}function on(r,t){return r-t>-$}function xe(r,t){return r-t<-$}function ln(r,t){return r-t<$}var an=Object.freeze({setTolerance:_e,getTolerance:me,DECIMALS:sn,EQ_0:zt,EQ:rt,GT:Ee,GE:on,LT:xe,LE:ln});class Wt{static get ILLEGAL_PARAMETERS(){return new ReferenceError("Illegal Parameters")}static get ZERO_DIVISION(){return new Error("Zero division")}static get UNRESOLVED_BOUNDARY_CONFLICT(){return new Error("Unresolved boundary conflict in boolean operation")}static get INFINITE_LOOP(){return new Error("Infinite loop")}}let i={Utils:an,Errors:Wt,Matrix:void 0,Planar_set:void 0,Point:void 0,Vector:void 0,Line:void 0,Circle:void 0,Segment:void 0,Arc:void 0,Box:void 0,Edge:void 0,Face:void 0,Ray:void 0,Ray_shooting:void 0,Multiline:void 0,Polygon:void 0,Distance:void 0,Inversion:void 0};for(let r in Nt)i[r]=Nt[r];Object.defineProperty(i,"DP_TOL",{get:function(){return me()},set:function(r){_e(r)}});class Qt{constructor(t,e){this.first=t,this.last=e||this.first}static testInfiniteLoop(t){let e=t,n=t;do{if(e!=t&&e===n)throw i.Errors.INFINITE_LOOP;e=e.next,n=n.next.next}while(e!=t)}get size(){let t=0;for(let e of this)t++;return t}toArray(t=void 0,e=void 0){let n=[],s=t||this.first,l=e||this.last,o=s;if(o===void 0)return n;do n.push(o),o=o.next;while(o!==l.next);return n}append(t){return this.isEmpty()?this.first=t:(t.prev=this.last,this.last.next=t),this.last=t,this.last.next=void 0,this.first.prev=void 0,this}insert(t,e){if(this.isEmpty())this.first=t,this.last=t;else if(e==null)t.next=this.first,this.first.prev=t,this.first=t;else{let n=e.next;e.next=t,n&&(n.prev=t),t.prev=e,t.next=n,this.last===e&&(this.last=t)}return this.last.next=void 0,this.first.prev=void 0,this}remove(t){return t===this.first&&t===this.last?(this.first=void 0,this.last=void 0):(t.prev&&(t.prev.next=t.next),t.next&&(t.next.prev=t.prev),t===this.first&&(this.first=t.next),t===this.last&&(this.last=t.prev)),this}isEmpty(){return this.first===void 0}[Symbol.iterator](){let t;return{next:()=>(t=t?t.next:this.first,{value:t,done:t===void 0})}}}function at(r,t,e){let n=e.length,s=r.shape.split(t);if(s.length===0)return;let l=0;s[0]===null?l=0:s[1]===null?l=r.shape.length:l=s[0].length;let o=Dt;rt(l,0)&&(o|=Ot),rt(l,r.shape.length)&&(o|=lt);let a=o&lt&&r.next.arc_length===0?0:r.arc_length+l;e.push({id:n,pt:t,arc_length:a,edge_before:r,edge_after:void 0,face:r.face,is_vertex:o})}function wt(r){r.int_points1_sorted=vt(r.int_points1),r.int_points2_sorted=vt(r.int_points2)}function vt(r){let t=new Map,e=0;for(let s of r)t.has(s.face)||(t.set(s.face,e),e++);for(let s of r)s.faceId=t.get(s.face);return r.slice().sort(fn)}function fn(r,t){return r.faceId<t.faceId?-1:r.faceId>t.faceId?1:r.arc_length<t.arc_length?-1:r.arc_length>t.arc_length?1:0}function Yt(r,t){return t.slice().sort((e,n)=>r.coord(e.pt)<r.coord(n.pt)?-1:r.coord(e.pt)>r.coord(n.pt)?1:0)}function jt(r){if(r.int_points1.length<2)return;let t=!1,e,n,s,l;for(let o=0;o<r.int_points1_sorted.length;o++)if(r.int_points1_sorted[o].id!==-1){e=r.int_points1_sorted[o],n=r.int_points2[e.id];for(let a=o+1;a<r.int_points1_sorted.length&&(s=r.int_points1_sorted[a],!!rt(s.arc_length,e.arc_length));a++)s.id!==-1&&(l=r.int_points2[s.id],l.id!==-1&&s.edge_before===e.edge_before&&s.edge_after===e.edge_after&&l.edge_before===n.edge_before&&l.edge_after===n.edge_after&&(s.id=-1,l.id=-1,t=!0))}n=r.int_points2_sorted[0],e=r.int_points1[n.id];for(let o=1;o<r.int_points2_sorted.length;o++){let a=r.int_points2_sorted[o];if(a.id==-1)continue;if(n.id==-1||!rt(a.arc_length,n.arc_length)){n=a,e=r.int_points1[n.id];continue}let h=r.int_points1[a.id];h.edge_before===e.edge_before&&h.edge_after===e.edge_after&&a.edge_before===n.edge_before&&a.edge_after===n.edge_after&&(h.id=-1,a.id=-1,t=!0)}t&&(r.int_points1=r.int_points1.filter(o=>o.id>=0),r.int_points2=r.int_points2.filter(o=>o.id>=0),r.int_points1.forEach((o,a)=>o.id=a),r.int_points2.forEach((o,a)=>o.id=a))}function Xt(r){for(let t of r)t.edge_before.bvStart=void 0,t.edge_before.bvEnd=void 0,t.edge_before.bv=void 0,t.edge_before.overlap=void 0,t.edge_after.bvStart=void 0,t.edge_after.bvEnd=void 0,t.edge_after.bv=void 0,t.edge_after.overlap=void 0;for(let t of r)t.edge_before.bvEnd=M,t.edge_after.bvStart=M}function Zt(r,t){for(let e of r)e.edge_before.setInclusion(t),e.edge_after.setInclusion(t)}function hn(r){let t,e,n,s=r.int_points1.length;for(let l=0;l<s;l++){let o=r.int_points1_sorted[l];o.face!==t&&(e=l,t=o.face);let a=l,h=ft(r.int_points1_sorted,l,t),f;a+h<s&&r.int_points1_sorted[a+h].face===t?f=a+h:f=e;let u=ft(r.int_points1_sorted,f,t);n=null;for(let E=f;E<f+u;E++){let S=r.int_points1_sorted[E];if(S.face===t&&r.int_points2[S.id].face===r.int_points2[o.id].face){n=S;break}}if(n===null)continue;let p=o.edge_after,_=n.edge_before;if(!(p.bv===M&&_.bv===M)||p!==_)continue;let I=r.int_points2[o.id],v=r.int_points2[n.id],x=I.edge_after,y=v.edge_before;x.bv===M&&y.bv===M&&x===y||(I=r.int_points2[n.id],v=r.int_points2[o.id],x=I.edge_after,y=v.edge_before),x.bv===M&&y.bv===M&&x===y&&p.setOverlap(x)}}function ft(r,t,e){let n,s,l=1;if(r.length==1)return 1;n=r[t];for(let o=t+1;o<r.length&&!(n.face!=e||(s=r[o],!(s.pt.equalTo(n.pt)&&s.edge_before===n.edge_before&&s.edge_after===n.edge_after)));o++)l++;return l}function ht(r,t){if(t){for(let e of t){let n=e.edge_before;if(e.is_vertex=Dt,n.shape.start&&n.shape.start.equalTo(e.pt)&&(e.is_vertex|=Ot),n.shape.end&&n.shape.end.equalTo(e.pt)&&(e.is_vertex|=lt),e.is_vertex&Ot){e.edge_before=n.prev,e.is_vertex=lt;continue}if(e.is_vertex&lt)continue;let s=r.addVertex(e.pt,n);e.edge_before=s}for(let e of t)e.edge_after=e.edge_before.next}}function we(r,t,e){let n=r.edge_before,s=t.edge_after;n.next=e,e.prev=n,e.next=s,s.prev=e}const{INSIDE:B,OUTSIDE:F,BOUNDARY:b,OVERLAP_SAME:un,OVERLAP_OPPOSITE:cn}=Nt,{NOT_VERTEX:Si,START_VERTEX:ve,END_VERTEX:ye}=Nt,Ct=1,yt=2,st=3;function dn(r,t){let[e,n]=St(r,t,Ct,!0);return e}function Jt(r,t){let n=t.clone().reverse(),[s,l]=St(r,n,st,!0);return s}function Se(r,t){let[e,n]=St(r,t,yt,!0);return e}function Ie(r,t){let[e,n]=St(r,t,yt,!1),s=[];for(let o of e.faces)s=[...s,...[...o.edges].map(a=>a.shape)];let l=[];for(let o of n.faces)l=[...l,...[...o.edges].map(a=>a.shape)];return[s,l]}function Kt(r,t){let[e,n]=St(r,t,st,!1),s=[];for(let l of e.faces)s=[...s,...[...l.edges].map(o=>o.shape)];return s}function Te(r,t){let e=r.clone(),n=t.clone(),s=be(e,n);wt(s),ht(e,s.int_points1_sorted),ht(n,s.int_points2_sorted),jt(s),wt(s);let l=s.int_points1_sorted.map(a=>a.pt),o=s.int_points2_sorted.map(a=>a.pt);return[l,o]}function pn(r,t,e,n){let s=Pe(r,e.int_points1),l=Pe(t,e.int_points2);for(Ae(s,t),Ae(l,r),Xt(e.int_points1),Xt(e.int_points2),Zt(e.int_points1,t),Zt(e.int_points2,r);_n(r,t,e.int_points1,e.int_points1_sorted,e.int_points2,e););hn(e),te(r,n,e.int_points1_sorted,!0),te(t,n,e.int_points2_sorted,!1),Le(r,s,n,!0),Le(t,l,n,!1)}function gn(r,t,e,n){mn(r,t,n,e.int_points2),En(r,t,e),ee(r,e.int_points1),ee(t,e.int_points2),ne(r,e.int_points1,e.int_points2),ne(r,e.int_points2,e.int_points1)}function St(r,t,e,n){let s=r.clone(),l=t.clone(),o=be(s,l);return wt(o),ht(s,o.int_points1_sorted),ht(l,o.int_points2_sorted),jt(o),wt(o),pn(s,l,o,e),n&&gn(s,l,o,e),[s,l]}function be(r,t){let e={int_points1:[],int_points2:[]};for(let n of r.edges){let s=t.edges.search(n.box);for(let l of s){let o=n.shape.intersect(l.shape);for(let a of o)at(n,a,e.int_points1),at(l,a,e.int_points2)}}return e}function Pe(r,t){let e=[];for(let n of r.faces)t.find(s=>s.face===n)||e.push(n);return e}function Ae(r,t){for(let e of r)e.first.bv=e.first.bvStart=e.first.bvEnd=void 0,e.first.setInclusion(t)}function _n(r,t,e,n,s,l){let o,a,h,f=n.length,u=!1;for(let p=0;p<f;p++){let _=n[p];_.face!==o&&(a=p,o=_.face);let I=p,v=ft(n,p,o),x;I+v<f&&n[I+v].face===o?x=I+v:x=a;let y=ft(n,x,o);h=null;for(let g=x;g<x+y;g++){let L=n[g];if(L.face===o&&s[L.id].face===s[_.id].face){h=L;break}}if(h===null)continue;let E=_.edge_after,S=h.edge_before;if(E.bv===b&&S.bv!=b){E.bv=S.bv;continue}if(E.bv!=b&&S.bv===b){S.bv=E.bv;continue}if(E.bv===b&&S.bv===b&&E!=S||E.bv===B&&S.bv===F||E.bv===F&&S.bv===B){let g=E.next;for(;g!=S;)g.bvStart=void 0,g.bvEnd=void 0,g.bv=void 0,g.setInclusion(t),g=g.next}if(E.bv===b&&S.bv===b&&E!=S){let g=E.next,L;for(;g!=S;){if(g.bv!=b){if(L===void 0)L=g.bv;else if(g.bv!=L)throw Wt.UNRESOLVED_BOUNDARY_CONFLICT}g=g.next}L!=null&&(E.bv=L,S.bv=L);continue}if(E.bv===B&&S.bv===F||E.bv===F&&S.bv===B){let g=E;for(;g!=S;){if(g.bvStart===E.bv&&g.bvEnd===S.bv){let[L,de]=g.shape.distanceTo(t);if(L<10*i.DP_TOL){at(g,de.ps,e);let nt=e[e.length-1];if(nt.is_vertex&ve)nt.edge_after=g,nt.edge_before=g.prev,g.bvStart=b,g.bv=void 0,g.setInclusion(t);else if(nt.is_vertex&ye)nt.edge_after=g.next,g.bvEnd=b,g.bv=void 0,g.setInclusion(t);else{let X=t.addVertex(nt.pt,g);nt.edge_before=X,nt.edge_after=X.next,X.setInclusion(t),X.next.bvStart=b,X.next.bvEnd=void 0,X.next.bv=void 0,X.next.setInclusion(t)}let mt=t.findEdgeByPoint(de.pe);at(mt,de.pe,s);let it=s[s.length-1];if(it.is_vertex&ve)it.edge_after=mt,it.edge_before=mt.prev;else if(it.is_vertex&ye)it.edge_after=mt.next;else{let X=s.find(wi=>wi.edge_after===mt),U=t.addVertex(it.pt,mt);it.edge_before=U,it.edge_after=U.next,X&&(X.edge_after=U),U.bvStart=void 0,U.bvEnd=b,U.bv=void 0,U.setInclusion(r),U.next.bvStart=b,U.next.bvEnd=void 0,U.next.bv=void 0,U.next.setInclusion(r)}wt(l),u=!0;break}}g=g.next}if(u)break;throw Wt.UNRESOLVED_BOUNDARY_CONFLICT}}return u}function te(r,t,e,n){if(!e)return;let s,l,o,a;for(let h=0;h<e.length;h++){if(o=e[h],o.face!==s&&(l=h,s=o.face),s.isEmpty())continue;let f=h,u=ft(e,h,s),p;f+u<e.length&&e[f+u].face===o.face?p=f+u:p=l,a=e[p];let _=p,I=ft(e,_,s),v=o.edge_after,x=a.edge_before;if(v.bv===B&&x.bv===B&&t===Ct||v.bv===F&&x.bv===F&&t===yt||(v.bv===F||x.bv===F)&&t===st&&!n||(v.bv===B||x.bv===B)&&t===st&&n||v.bv===b&&x.bv===b&&v.overlap&un&&n||v.bv===b&&x.bv===b&&v.overlap&cn){r.removeChain(s,v,x);for(let y=f;y<f+u;y++)e[y].edge_after=void 0;for(let y=_;y<_+I;y++)e[y].edge_before=void 0}h+=u-1}}function mn(r,t,e,n){for(let s of t.faces){for(let l of s)r.edges.add(l);n.find(l=>l.face===s)===void 0&&r.addFace(s.first,s.last)}}function En(r,t,e){if(e.int_points1.length!==0)for(let n=0;n<e.int_points1.length;n++){let s=e.int_points1[n],l=e.int_points2[n];if(s.edge_before!==void 0&&s.edge_after===void 0&&l.edge_before===void 0&&l.edge_after!==void 0&&(s.edge_before.next=l.edge_after,l.edge_after.prev=s.edge_before,s.edge_after=l.edge_after,l.edge_before=s.edge_before),l.edge_before!==void 0&&l.edge_after===void 0&&s.edge_before===void 0&&s.edge_after!==void 0&&(l.edge_before.next=s.edge_after,s.edge_after.prev=l.edge_before,l.edge_after=s.edge_after,s.edge_before=l.edge_before),s.edge_before!==void 0&&s.edge_after===void 0)for(let o of e.int_points1_sorted)o!==s&&o.edge_before===void 0&&o.edge_after!==void 0&&o.pt.equalTo(s.pt)&&(s.edge_before.next=o.edge_after,o.edge_after.prev=s.edge_before,s.edge_after=o.edge_after,o.edge_before=s.edge_before);if(l.edge_before!==void 0&&l.edge_after===void 0)for(let o of e.int_points2_sorted)o!==l&&o.edge_before===void 0&&o.edge_after!==void 0&&o.pt.equalTo(l.pt)&&(l.edge_before.next=o.edge_after,o.edge_after.prev=l.edge_before,l.edge_after=o.edge_after,o.edge_before=l.edge_before)}}function ee(r,t){for(let e of t)r.faces.delete(e.face),e.face=void 0,e.edge_before&&(e.edge_before.face=void 0),e.edge_after&&(e.edge_after.face=void 0)}function ne(r,t,e){for(let n of t){if(n.edge_before===void 0||n.edge_after===void 0||n.face||n.edge_after.face||n.edge_before.face)continue;let s=n.edge_after,l=n.edge_before;Qt.testInfiniteLoop(s);let o=r.addFace(s,l);for(let a of t)a.edge_before&&a.edge_after&&a.edge_before.face===o&&a.edge_after.face===o&&(a.face=o);for(let a of e)a.edge_before&&a.edge_after&&a.edge_before.face===o&&a.edge_after.face===o&&(a.face=o)}}function Le(r,t,e,n){for(let s of t){let l=s.first.bv;(e===Ct&&l===B||e===st&&l===B&&n||e===st&&l===F&&!n||e===yt&&l===F)&&r.deleteFace(s)}}var xn=Object.freeze({BOOLEAN_UNION:Ct,BOOLEAN_INTERSECT:yt,BOOLEAN_SUBTRACT:st,unify:dn,subtract:Jt,intersect:Se,innerClip:Ie,outerClip:Kt,calculateIntersections:Te,removeNotRelevantChains:te,removeOldFaces:ee,restoreFaces:ne});const wn=RegExp("T.F..FFF.|T.F...F.."),vn=RegExp("T........|.T.......|...T.....|....T...."),yn=RegExp("FT.......|F..T.....|F...T...."),Sn=RegExp("T.F..F..."),In=RegExp("T.F..F...|.TF..F...|..FT.F...|..F.TF...");class ut{constructor(){this.m=new Array(9).fill(void 0)}get I2I(){return this.m[0]}set I2I(t){this.m[0]=t}get I2B(){return this.m[1]}set I2B(t){this.m[1]=t}get I2E(){return this.m[2]}set I2E(t){this.m[2]=t}get B2I(){return this.m[3]}set B2I(t){this.m[3]=t}get B2B(){return this.m[4]}set B2B(t){this.m[4]=t}get B2E(){return this.m[5]}set B2E(t){this.m[5]=t}get E2I(){return this.m[6]}set E2I(t){this.m[6]=t}get E2B(){return this.m[7]}set E2B(t){this.m[7]=t}get E2E(){return this.m[8]}set E2E(t){this.m[8]=t}toString(){return this.m.map(t=>t instanceof Array&&t.length>0?"T":t instanceof Array&&t.length===0?"F":"*").join("")}equal(){return wn.test(this.toString())}intersect(){return vn.test(this.toString())}touch(){return yn.test(this.toString())}inside(){return Sn.test(this.toString())}covered(){return In.test(this.toString())}}function Rt(r,t){let e=[],[n,s,l]=r.standard,[o,a,h]=t.standard,f=n*a-s*o,u=l*a-s*h,p=n*h-l*o;if(!i.Utils.EQ_0(f)){let _,I;s===0?(_=l/n,I=p/f):a===0?(_=h/o,I=p/f):n===0?(_=u/f,I=l/s):o===0?(_=u/f,I=h/a):(_=u/f,I=p/f),e.push(new i.Point(_,I))}return e}function ct(r,t){let e=[],n=t.pc.projectionOn(r),s=t.pc.distanceTo(n)[0];if(i.Utils.EQ(s,t.r))e.push(n);else if(i.Utils.LT(s,t.r)){let l=Math.sqrt(t.r*t.r-s*s),o,a;o=r.norm.rotate90CCW().multiply(l),a=n.translate(o),e.push(a),o=r.norm.rotate90CW().multiply(l),a=n.translate(o),e.push(a)}return e}function It(r,t){let e=[];for(let n of t.toSegments()){let s=kt(n,r);for(let l of s)Re(l,e)||e.push(l)}return e}function ie(r,t){let e=[];if(It(r,t.box).length===0)return e;let n=new i.Circle(t.pc,t.r),s=ct(r,n);for(let l of s)l.on(t)&&e.push(l);return e}function kt(r,t){let e=[];if(r.ps.on(t)&&e.push(r.ps),r.pe.on(t)&&!r.isZeroLength()&&e.push(r.pe),e.length>0||r.isZeroLength()||r.ps.leftTo(t)&&r.pe.leftTo(t)||!r.ps.leftTo(t)&&!r.pe.leftTo(t))return e;let n=new i.Line(r.ps,r.pe);return Rt(n,t)}function Tt(r,t){let e=[];if(r.box.not_intersect(t.box))return e;if(r.isZeroLength())return r.ps.on(t)&&e.push(r.ps),e;if(t.isZeroLength())return t.ps.on(r)&&e.push(t.ps),e;let n=new i.Line(r.ps,r.pe),s=new i.Line(t.ps,t.pe);if(n.incidentTo(s))r.ps.on(t)&&e.push(r.ps),r.pe.on(t)&&e.push(r.pe),t.ps.on(r)&&!t.ps.equalTo(r.ps)&&!t.ps.equalTo(r.pe)&&e.push(t.ps),t.pe.on(r)&&!t.pe.equalTo(r.ps)&&!t.pe.equalTo(r.pe)&&e.push(t.pe);else{let l=Rt(n,s);l.length>0&&l[0].on(r)&&l[0].on(t)&&e.push(l[0])}return e}function Ut(r,t){let e=[];if(r.box.not_intersect(t.box))return e;if(r.isZeroLength()){let[l,o]=r.ps.distanceTo(t.pc);return i.Utils.EQ(l,t.r)&&e.push(r.ps),e}let n=new i.Line(r.ps,r.pe),s=ct(n,t);for(let l of s)l.on(r)&&e.push(l);return e}function ot(r,t){let e=[];if(r.box.not_intersect(t.box))return e;if(r.isZeroLength())return r.ps.on(t)&&e.push(r.ps),e;let n=new i.Line(r.ps,r.pe),s=new i.Circle(t.pc,t.r),l=ct(n,s);for(let o of l)o.on(r)&&o.on(t)&&e.push(o);return e}function Tn(r,t){let e=[];for(let n of t.toSegments()){let s=Tt(n,r);for(let l of s)e.push(l)}return e}function Oe(r,t){let e=[];if(r.box.not_intersect(t.box))return e;let n=new i.Vector(r.pc,t.pc),s=r.r,l=t.r;if(i.Utils.EQ_0(s)||i.Utils.EQ_0(l))return e;if(i.Utils.EQ_0(n.x)&&i.Utils.EQ_0(n.y)&&i.Utils.EQ(s,l))return e.push(r.pc.translate(-s,0)),e;let o=r.pc.distanceTo(t.pc)[0];if(i.Utils.GT(o,s+l)||i.Utils.LT(o,Math.abs(s-l)))return e;n.x/=o,n.y/=o;let a;if(i.Utils.EQ(o,s+l)||i.Utils.EQ(o,Math.abs(s-l)))return a=r.pc.translate(s*n.x,s*n.y),e.push(a),e;let h=s*s/(2*o)-l*l/(2*o)+o/2,f=r.pc.translate(h*n.x,h*n.y),u=Math.sqrt(s*s-h*h);return a=f.translate(n.rotate90CCW().multiply(u)),e.push(a),a=f.translate(n.rotate90CW().multiply(u)),e.push(a),e}function bn(r,t){let e=[];for(let n of t.toSegments()){let s=Ut(n,r);for(let l of s)e.push(l)}return e}function re(r,t){var e=[];if(r.box.not_intersect(t.box))return e;if(r.pc.equalTo(t.pc)&&i.Utils.EQ(r.r,t.r)){let o;return o=r.start,o.on(t)&&e.push(o),o=r.end,o.on(t)&&e.push(o),o=t.start,o.on(r)&&e.push(o),o=t.end,o.on(r)&&e.push(o),e}let n=new i.Circle(r.pc,r.r),s=new i.Circle(t.pc,t.r),l=n.intersect(s);for(let o of l)o.on(r)&&o.on(t)&&e.push(o);return e}function se(r,t){let e=[];if(r.box.not_intersect(t.box))return e;if(t.pc.equalTo(r.pc)&&i.Utils.EQ(t.r,r.r))return e.push(r.start),e.push(r.end),e;let n=t,s=new i.Circle(r.pc,r.r),l=Oe(n,s);for(let o of l)o.on(r)&&e.push(o);return e}function Pn(r,t){let e=[];for(let n of t.toSegments()){let s=ot(n,r);for(let l of s)e.push(l)}return e}function An(r,t){return r.isSegment()?Tt(r.shape,t):ot(t,r.shape)}function Ln(r,t){return r.isSegment()?ot(r.shape,t):re(r.shape,t)}function Ne(r,t){return r.isSegment()?kt(r.shape,t):ie(t,r.shape)}function On(r,t){return r.isSegment()?Ut(r.shape,t):se(r.shape,t)}function oe(r,t){let e=[];for(let n of t.edges)for(let s of An(n,r))e.push(s);return e}function le(r,t){let e=[];for(let n of t.edges)for(let s of Ln(n,r))e.push(s);return e}function Mt(r,t){let e=[];if(t.isEmpty())return e;for(let n of t.edges)for(let s of Ne(n,r))Re(s,e)||e.push(s);return r.sortPoints(e)}function Ce(r,t){let e=[];if(t.isEmpty())return e;for(let n of t.edges)for(let s of On(n,r))e.push(s);return e}function Nn(r,t){const e=r.shape,n=t.shape;return r.isSegment()?t.isSegment()?Tt(e,n):ot(e,n):t.isSegment()?ot(n,e):re(e,n)}function Cn(r,t){let e=[];if(t.isEmpty()||r.shape.box.not_intersect(t.box))return e;let n=t.edges.search(r.shape.box);for(let s of n)for(let l of Nn(r,s))e.push(l);return e}function Rn(r,t){let e=[];if(r.isEmpty()||t.isEmpty()||r.box.not_intersect(t.box))return e;for(let n of r.edges)for(let s of Cn(n,t))e.push(s);return e}function kn(r,t){return r instanceof i.Line?Mt(r,t):r instanceof i.Segment?oe(r,t):r instanceof i.Arc?le(r,t):[]}function Re(r,t){return t.some(e=>e.equalTo(r))}class O extends Qt{constructor(...t){if(super(),t.length!==0&&t.length==1&&t[0]instanceof Array){let e=t[0];if(e.length==0)return;e.every(n=>n instanceof i.Segment||n instanceof i.Arc||n instanceof i.Ray||n instanceof i.Line);for(let n of e){let s=new i.Edge(n);this.append(s)}}}get edges(){return[...this]}get box(){return this.edges.reduce((t,e)=>t=t.merge(e.box),new i.Box)}get vertices(){let t=this.edges.map(e=>e.start);return t.push(this.last.end),t}clone(){return new O(this.toShapes())}addVertex(t,e){let n=e.shape.split(t);if(n[0]===null)return e.prev;if(n[1]===null)return e;let s=new i.Edge(n[0]),l=e.prev;return this.insert(s,l),e.shape=n[1],s}split(t){for(let e of t){let n=this.findEdgeByPoint(e);this.addVertex(e,n)}return this}findEdgeByPoint(t){let e;for(let n of this)if(n.shape.contains(t)){e=n;break}return e}translate(t){return new O(this.edges.map(e=>e.shape.translate(t)))}rotate(t=0,e=new i.Point){return new O(this.edges.map(n=>n.shape.rotate(t,e)))}transform(t=new i.Matrix){return new O(this.edges.map(e=>e.shape.transform(t)))}toShapes(){return this.edges.map(t=>t.shape.clone())}toJSON(){return this.edges.map(t=>t.toJSON())}svg(t={}){let{stroke:e,strokeWidth:n,fill:s,fillRule:l,fillOpacity:o,id:a,className:h}=t,f=a&&a.length>0?`id="${a}"`:"",u=h&&h.length>0?`class="${h}"`:"",p=`
<path stroke="${e||"black"}" stroke-width="${n||1}" fill="${s||"none"}" fill-opacity="${o||1}" ${f} ${u} d="`;p+=`
M${this.first.start.x},${this.first.start.y}`;for(let _ of this)p+=_.svg();return p+=`" >
</path>`,p}}i.Multiline=O;const Un=(...r)=>new i.Multiline(...r);i.multiline=Un;function bt(r,t){let e,n=new i.Ray(t),s=new i.Line(n.pt,n.norm);const l=new i.Box(n.box.xmin-i.DP_TOL,n.box.ymin-i.DP_TOL,n.box.xmax,n.box.ymax+i.DP_TOL);if(r.box.not_intersect(l))return i.OUTSIDE;let o=r.edges.search(l);if(o.length==0)return i.OUTSIDE;for(let f of o)if(f.shape.contains(t))return i.BOUNDARY;let a=[];for(let f of o)for(let u of n.intersect(f.shape)){if(u.equalTo(t))return i.BOUNDARY;a.push({pt:u,edge:f})}a.sort((f,u)=>xe(f.pt.x,u.pt.x)?-1:Ee(f.pt.x,u.pt.x)?1:0);let h=0;for(let f=0;f<a.length;f++){let u=a[f];if(u.pt.equalTo(u.edge.shape.start)){if(f>0&&u.pt.equalTo(a[f-1].pt)&&u.edge.prev===a[f-1].edge)continue;let p=u.edge.prev;for(;zt(p.length);)p=p.prev;let _=p.shape.tangentInEnd(),I=u.pt.translate(_),v=u.edge.shape.tangentInStart(),x=u.pt.translate(v),y=I.leftTo(s),E=x.leftTo(s);(y&&!E||!y&&E)&&h++}else if(u.pt.equalTo(u.edge.shape.end)){if(f>0&&u.pt.equalTo(a[f-1].pt)&&u.edge.next===a[f-1].edge)continue;let p=u.edge.next;for(;zt(p.length);)p=p.next;let _=p.shape.tangentInStart(),I=u.pt.translate(_),v=u.edge.shape.tangentInEnd(),x=u.pt.translate(v),y=I.leftTo(s),E=x.leftTo(s);(y&&!E||!y&&E)&&h++}else if(u.edge.shape instanceof i.Segment)h++;else{let p=u.edge.shape.box;rt(u.pt.y,p.ymin)||rt(u.pt.y,p.ymax)||h++}}return e=h%2==1?xt:ge,e}function Mn(r,t){return dt(r,t).equal()}function ke(r,t){return dt(r,t).intersect()}function $n(r,t){return dt(r,t).touch()}function Bn(r,t){return!ke(r,t)}function Ue(r,t){return dt(r,t).inside()}function Me(r,t){return dt(r,t).covered()}function Fn(r,t){return Ue(t,r)}function $e(r,t){return Me(t,r)}function dt(r,t){if(r instanceof i.Line&&t instanceof i.Line)return Vn(r,t);if(r instanceof i.Line&&t instanceof i.Circle)return Hn(r,t);if(r instanceof i.Line&&t instanceof i.Box)return qn(r,t);if(r instanceof i.Line&&t instanceof i.Polygon)return Gn(r,t);if((r instanceof i.Segment||r instanceof i.Arc)&&t instanceof i.Polygon)return Be(r,t);if((r instanceof i.Segment||r instanceof i.Arc)&&(t instanceof i.Circle||t instanceof i.Box))return Be(r,new i.Polygon(t));if(r instanceof i.Polygon&&t instanceof i.Polygon)return $t(r,t);if((r instanceof i.Circle||r instanceof i.Box)&&(t instanceof i.Circle||t instanceof i.Box))return $t(new i.Polygon(r),new i.Polygon(t));if((r instanceof i.Circle||r instanceof i.Box)&&t instanceof i.Polygon)return $t(new i.Polygon(r),t);if(r instanceof i.Polygon&&(t instanceof i.Circle||t instanceof i.Box))return $t(r,new i.Polygon(t))}function Vn(r,t){let e=new ut,n=Rt(r,t);return n.length===0?r.contains(t.pt)&&t.contains(r.pt)?(e.I2I=[r],e.I2E=[],e.E2I=[]):(e.I2I=[],e.I2E=[r],e.E2I=[t]):(e.I2I=n,e.I2E=r.split(n),e.E2I=t.split(n)),e}function Hn(r,t){let e=new ut,n=ct(r,t);if(n.length===0)e.I2I=[],e.I2B=[],e.I2E=[r],e.E2I=[t];else if(n.length===1)e.I2I=[],e.I2B=n,e.I2E=r.split(n),e.E2I=[t];else{let s=new O([r]),l=r.sortPoints(n);s.split(l);let o=s.toShapes();e.I2I=[o[1]],e.I2B=l,e.I2E=[o[0],o[2]],e.E2I=new i.Polygon([t.toArc()]).cut(s)}return e}function qn(r,t){let e=new ut,n=It(r,t);if(n.length===0)e.I2I=[],e.I2B=[],e.I2E=[r],e.E2I=[t];else if(n.length===1)e.I2I=[],e.I2B=n,e.I2E=r.split(n),e.E2I=[t];else{let s=new O([r]),l=r.sortPoints(n);s.split(l);let o=s.toShapes();t.toSegments().some(a=>a.contains(n[0])&&a.contains(n[1]))?(e.I2I=[],e.I2B=[o[1]],e.I2E=[o[0],o[2]],e.E2I=[t]):(e.I2I=[o[1]],e.I2B=l,e.I2E=[o[0],o[2]],e.E2I=new i.Polygon(t.toSegments()).cut(s))}return e}function Gn(r,t){let e=new ut,n=Mt(r,t),s=new O([r]),l=n.length>0?n.slice():r.sortPoints(n);return s.split(l),[...s].forEach(o=>o.setInclusion(t)),e.I2I=[...s].filter(o=>o.bv===i.INSIDE).map(o=>o.shape),e.I2B=[...s].slice(1).map(o=>o.bv===i.BOUNDARY?o.shape:o.shape.start),e.I2E=[...s].filter(o=>o.bv===i.OUTSIDE).map(o=>o.shape),e.E2I=t.cut(s),e}function Be(r,t){let e=new ut,n=kn(r,t),s=n.length>0?n.slice():r.sortPoints(n),l=new O([r]);l.split(s),[...l].forEach(o=>o.setInclusion(t)),e.I2I=[...l].filter(o=>o.bv===i.INSIDE).map(o=>o.shape),e.I2B=[...l].slice(1).map(o=>o.bv===i.BOUNDARY?o.shape:o.shape.start),e.I2E=[...l].filter(o=>o.bv===i.OUTSIDE).map(o=>o.shape),e.B2I=[],e.B2B=[],e.B2E=[];for(let o of[r.start,r.end])switch(bt(t,o)){case i.INSIDE:e.B2I.push(o);break;case i.BOUNDARY:e.B2B.push(o);break;case i.OUTSIDE:e.B2E.push(o);break}return e}function $t(r,t){let e=new ut,[n,s]=Te(r,t),l=Se(r,t),o=Jt(r,t),a=Jt(t,r),[h,f]=Ie(r,t),u=Kt(r,t),p=Kt(t,r);return e.I2I=l.isEmpty()?[]:[l],e.I2B=f,e.I2E=o.isEmpty()?[]:[o],e.B2I=h,e.B2B=n,e.B2E=u,e.E2I=a.isEmpty()?[]:[a],e.E2B=p,e}var Dn=Object.freeze({equal:Mn,intersect:ke,touch:$n,disjoint:Bn,inside:Ue,covered:Me,contain:Fn,cover:$e,relate:dt});let zn=class Et{constructor(t=1,e=0,n=0,s=1,l=0,o=0){this.a=t,this.b=e,this.c=n,this.d=s,this.tx=l,this.ty=o}clone(){return new Et(this.a,this.b,this.c,this.d,this.tx,this.ty)}transform(t){return[t[0]*this.a+t[1]*this.c+this.tx,t[0]*this.b+t[1]*this.d+this.ty]}multiply(t){return new Et(this.a*t.a+this.c*t.b,this.b*t.a+this.d*t.b,this.a*t.c+this.c*t.d,this.b*t.c+this.d*t.d,this.a*t.tx+this.c*t.ty+this.tx,this.b*t.tx+this.d*t.ty+this.ty)}translate(...t){let e,n;if(t.length==1&&t[0]instanceof i.Vector)e=t[0].x,n=t[0].y;else if(t.length==2&&typeof t[0]=="number"&&typeof t[1]=="number")e=t[0],n=t[1];else throw i.Errors.ILLEGAL_PARAMETERS;return this.multiply(new Et(1,0,0,1,e,n))}rotate(t){let e=Math.cos(t),n=Math.sin(t);return this.multiply(new Et(e,n,-n,e,0,0))}scale(t,e){return this.multiply(new Et(t,0,0,e,0,0))}equalTo(t){return!(!i.Utils.EQ(this.tx,t.tx)||!i.Utils.EQ(this.ty,t.ty)||!i.Utils.EQ(this.a,t.a)||!i.Utils.EQ(this.b,t.b)||!i.Utils.EQ(this.c,t.c)||!i.Utils.EQ(this.d,t.d))}};i.Matrix=zn;const Wn=(...r)=>new i.Matrix(...r);i.matrix=Wn;const Qn=class pe{constructor(t,e){this.low=t,this.high=e}clone(){return new pe(this.low,this.high)}get max(){return this.clone()}less_than(t){return this.low<t.low||this.low==t.low&&this.high<t.high}equal_to(t){return this.low==t.low&&this.high==t.high}intersect(t){return!this.not_intersect(t)}not_intersect(t){return this.high<t.low||t.high<this.low}merge(t){return new pe(this.low===void 0?t.low:Math.min(this.low,t.low),this.high===void 0?t.high:Math.max(this.high,t.high))}output(){return[this.low,this.high]}static comparable_max(t,e){return t.merge(e)}static comparable_less_than(t,e){return t<e}},P=0,m=1;class pt{constructor(t=void 0,e=void 0,n=null,s=null,l=null,o=m){this.left=n,this.right=s,this.parent=l,this.color=o,this.item={key:t,value:e},t&&t instanceof Array&&t.length==2&&!Number.isNaN(t[0])&&!Number.isNaN(t[1])&&(this.item.key=new Qn(Math.min(t[0],t[1]),Math.max(t[0],t[1]))),this.max=this.item.key?this.item.key.max:void 0}isNil(){return this.item.key===void 0&&this.item.value===void 0&&this.left===null&&this.right===null&&this.color===m}less_than(t){if(this.item.value===this.item.key&&t.item.value===t.item.key)return this.item.key.less_than(t.item.key);{let e=this.item.value&&t.item.value&&this.item.value.less_than?this.item.value.less_than(t.item.value):this.item.value<t.item.value;return this.item.key.less_than(t.item.key)||this.item.key.equal_to(t.item.key)&&e}}equal_to(t){if(this.item.value===this.item.key&&t.item.value===t.item.key)return this.item.key.equal_to(t.item.key);{let e=this.item.value&&t.item.value&&this.item.value.equal_to?this.item.value.equal_to(t.item.value):this.item.value==t.item.value;return this.item.key.equal_to(t.item.key)&&e}}intersect(t){return this.item.key.intersect(t.item.key)}copy_data(t){this.item.key=t.item.key,this.item.value=t.item.value}update_max(){if(this.max=this.item.key?this.item.key.max:void 0,this.right&&this.right.max){const t=this.item.key.constructor.comparable_max;this.max=t(this.max,this.right.max)}if(this.left&&this.left.max){const t=this.item.key.constructor.comparable_max;this.max=t(this.max,this.left.max)}}not_intersect_left_subtree(t){const e=this.item.key.constructor.comparable_less_than;let n=this.left.max.high!==void 0?this.left.max.high:this.left.max;return e(n,t.item.key.low)}not_intersect_right_subtree(t){const e=this.item.key.constructor.comparable_less_than;let n=this.right.max.low!==void 0?this.right.max.low:this.right.item.key.low;return e(t.item.key.high,n)}}class Pt{constructor(){this.root=null,this.nil_node=new pt}get size(){let t=0;return this.tree_walk(this.root,()=>t++),t}get keys(){let t=[];return this.tree_walk(this.root,e=>t.push(e.item.key.output?e.item.key.output():e.item.key)),t}get values(){let t=[];return this.tree_walk(this.root,e=>t.push(e.item.value)),t}get items(){let t=[];return this.tree_walk(this.root,e=>t.push({key:e.item.key.output?e.item.key.output():e.item.key,value:e.item.value})),t}isEmpty(){return this.root==null||this.root==this.nil_node}clear(){this.root=null}insert(t,e=t){if(t===void 0)return;let n=new pt(t,e,this.nil_node,this.nil_node,null,P);return this.tree_insert(n),this.recalc_max(n),n}exist(t,e=t){let n=new pt(t,e);return!!this.tree_search(this.root,n)}remove(t,e=t){let n=new pt(t,e),s=this.tree_search(this.root,n);return s&&this.tree_delete(s),s}search(t,e=(n,s)=>n===s?s.output():n){let n=new pt(t),s=[];return this.tree_search_interval(this.root,n,s),s.map(l=>e(l.item.value,l.item.key))}intersect_any(t){let e=new pt(t);return this.tree_find_any_interval(this.root,e)}forEach(t){this.tree_walk(this.root,e=>t(e.item.key,e.item.value))}map(t){const e=new Pt;return this.tree_walk(this.root,n=>e.insert(n.item.key,t(n.item.value,n.item.key))),e}recalc_max(t){let e=t;for(;e.parent!=null;)e.parent.update_max(),e=e.parent}tree_insert(t){let e=this.root,n=null;if(this.root==null||this.root==this.nil_node)this.root=t;else{for(;e!=this.nil_node;)n=e,t.less_than(e)?e=e.left:e=e.right;t.parent=n,t.less_than(n)?n.left=t:n.right=t}this.insert_fixup(t)}insert_fixup(t){let e,n;for(e=t;e!=this.root&&e.parent.color==P;)e.parent==e.parent.parent.left?(n=e.parent.parent.right,n.color==P?(e.parent.color=m,n.color=m,e.parent.parent.color=P,e=e.parent.parent):(e==e.parent.right&&(e=e.parent,this.rotate_left(e)),e.parent.color=m,e.parent.parent.color=P,this.rotate_right(e.parent.parent))):(n=e.parent.parent.left,n.color==P?(e.parent.color=m,n.color=m,e.parent.parent.color=P,e=e.parent.parent):(e==e.parent.left&&(e=e.parent,this.rotate_right(e)),e.parent.color=m,e.parent.parent.color=P,this.rotate_left(e.parent.parent)));this.root.color=m}tree_delete(t){let e,n;t.left==this.nil_node||t.right==this.nil_node?e=t:e=this.tree_successor(t),e.left!=this.nil_node?n=e.left:n=e.right,n.parent=e.parent,e==this.root?this.root=n:(e==e.parent.left?e.parent.left=n:e.parent.right=n,e.parent.update_max()),this.recalc_max(n),e!=t&&(t.copy_data(e),t.update_max(),this.recalc_max(t)),e.color==m&&this.delete_fixup(n)}delete_fixup(t){let e=t,n;for(;e!=this.root&&e.parent!=null&&e.color==m;)e==e.parent.left?(n=e.parent.right,n.color==P&&(n.color=m,e.parent.color=P,this.rotate_left(e.parent),n=e.parent.right),n.left.color==m&&n.right.color==m?(n.color=P,e=e.parent):(n.right.color==m&&(n.color=P,n.left.color=m,this.rotate_right(n),n=e.parent.right),n.color=e.parent.color,e.parent.color=m,n.right.color=m,this.rotate_left(e.parent),e=this.root)):(n=e.parent.left,n.color==P&&(n.color=m,e.parent.color=P,this.rotate_right(e.parent),n=e.parent.left),n.left.color==m&&n.right.color==m?(n.color=P,e=e.parent):(n.left.color==m&&(n.color=P,n.right.color=m,this.rotate_left(n),n=e.parent.left),n.color=e.parent.color,e.parent.color=m,n.left.color=m,this.rotate_right(e.parent),e=this.root));e.color=m}tree_search(t,e){if(!(t==null||t==this.nil_node))return e.equal_to(t)?t:e.less_than(t)?this.tree_search(t.left,e):this.tree_search(t.right,e)}tree_search_interval(t,e,n){t!=null&&t!=this.nil_node&&(t.left!=this.nil_node&&!t.not_intersect_left_subtree(e)&&this.tree_search_interval(t.left,e,n),t.intersect(e)&&n.push(t),t.right!=this.nil_node&&!t.not_intersect_right_subtree(e)&&this.tree_search_interval(t.right,e,n))}tree_find_any_interval(t,e){let n=!1;return t!=null&&t!=this.nil_node&&(t.left!=this.nil_node&&!t.not_intersect_left_subtree(e)&&(n=this.tree_find_any_interval(t.left,e)),n||(n=t.intersect(e)),!n&&t.right!=this.nil_node&&!t.not_intersect_right_subtree(e)&&(n=this.tree_find_any_interval(t.right,e))),n}local_minimum(t){let e=t;for(;e.left!=null&&e.left!=this.nil_node;)e=e.left;return e}local_maximum(t){let e=t;for(;e.right!=null&&e.right!=this.nil_node;)e=e.right;return e}tree_successor(t){let e,n,s;if(t.right!=this.nil_node)e=this.local_minimum(t.right);else{for(n=t,s=t.parent;s!=null&&s.right==n;)n=s,s=s.parent;e=s}return e}rotate_left(t){let e=t.right;t.right=e.left,e.left!=this.nil_node&&(e.left.parent=t),e.parent=t.parent,t==this.root?this.root=e:t==t.parent.left?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e,t!=null&&t!=this.nil_node&&t.update_max(),e=t.parent,e!=null&&e!=this.nil_node&&e.update_max()}rotate_right(t){let e=t.left;t.left=e.right,e.right!=this.nil_node&&(e.right.parent=t),e.parent=t.parent,t==this.root?this.root=e:t==t.parent.left?t.parent.left=e:t.parent.right=e,e.right=t,t.parent=e,t!=null&&t!=this.nil_node&&t.update_max(),e=t.parent,e!=null&&e!=this.nil_node&&e.update_max()}tree_walk(t,e){t!=null&&t!=this.nil_node&&(this.tree_walk(t.left,e),e(t),this.tree_walk(t.right,e))}testRedBlackProperty(){let t=!0;return this.tree_walk(this.root,function(e){e.color==P&&(e.left.color==m&&e.right.color==m||(t=!1))}),t}testBlackHeightProperty(t){let e=0,n=0,s=0;if(t.color==m&&e++,t.left!=this.nil_node?n=this.testBlackHeightProperty(t.left):n=1,t.right!=this.nil_node?s=this.testBlackHeightProperty(t.right):s=1,n!=s)throw new Error("Red-black height property violated");return e+=n,e}}class Yn extends Set{constructor(t){super(t),this.index=new Pt,this.forEach(e=>this.index.insert(e))}add(t){let e=this.size;return super.add(t),this.size>e&&this.index.insert(t.box,t),this}delete(t){let e=super.delete(t);return e&&this.index.remove(t.box,t),e}clear(){super.clear(),this.index=new Pt}search(t){return this.index.search(t)}hit(t){let e=new i.Box(t.x-1,t.y-1,t.x+1,t.y+1);return this.index.search(e).filter(s=>t.on(s))}svg(){return[...this].reduce((e,n)=>e+n.svg(),"")}}i.PlanarSet=Yn;class ae{constructor(...t){if(this.x=0,this.y=0,t.length!==0){if(t.length===1&&t[0]instanceof Array&&t[0].length===2){let e=t[0];if(typeof e[0]=="number"&&typeof e[1]=="number"){this.x=e[0],this.y=e[1];return}}if(t.length===1&&t[0]instanceof Object&&t[0].name==="point"){let{x:e,y:n}=t[0];this.x=e,this.y=n;return}if(t.length===2&&typeof t[0]=="number"&&typeof t[1]=="number"){this.x=t[0],this.y=t[1];return}throw i.Errors.ILLEGAL_PARAMETERS}}get box(){return new i.Box(this.x,this.y,this.x,this.y)}clone(){return new i.Point(this.x,this.y)}get vertices(){return[this.clone()]}equalTo(t){return i.Utils.EQ(this.x,t.x)&&i.Utils.EQ(this.y,t.y)}lessThan(t){return!!(i.Utils.LT(this.y,t.y)||i.Utils.EQ(this.y,t.y)&&i.Utils.LT(this.x,t.x))}rotate(t,e={x:0,y:0}){var n=e.x+(this.x-e.x)*Math.cos(t)-(this.y-e.y)*Math.sin(t),s=e.y+(this.x-e.x)*Math.sin(t)+(this.y-e.y)*Math.cos(t);return new i.Point(n,s)}translate(...t){if(t.length==1&&(t[0]instanceof i.Vector||!isNaN(t[0].x)&&!isNaN(t[0].y)))return new i.Point(this.x+t[0].x,this.y+t[0].y);if(t.length==2&&typeof t[0]=="number"&&typeof t[1]=="number")return new i.Point(this.x+t[0],this.y+t[1]);throw i.Errors.ILLEGAL_PARAMETERS}transform(t){return new i.Point(t.transform([this.x,this.y]))}projectionOn(t){if(this.equalTo(t.pt))return this.clone();let e=new i.Vector(this,t.pt);if(i.Utils.EQ_0(e.cross(t.norm)))return t.pt.clone();let n=e.dot(t.norm),s=t.norm.multiply(n);return this.translate(s)}leftTo(t){let e=new i.Vector(t.pt,this);return i.Utils.GT(e.dot(t.norm),0)}distanceTo(t){if(t instanceof ae){let e=t.x-this.x,n=t.y-this.y;return[Math.sqrt(e*e+n*n),new i.Segment(this,t)]}if(t instanceof i.Line)return i.Distance.point2line(this,t);if(t instanceof i.Circle)return i.Distance.point2circle(this,t);if(t instanceof i.Segment)return i.Distance.point2segment(this,t);if(t instanceof i.Arc)return i.Distance.point2arc(this,t);if(t instanceof i.Polygon)return i.Distance.point2polygon(this,t);if(t instanceof i.PlanarSet)return i.Distance.shape2planarSet(this,t)}on(t){if(t instanceof i.Point)return this.equalTo(t);if(t instanceof i.Line)return t.contains(this);if(t instanceof i.Circle)return t.contains(this);if(t instanceof i.Segment)return t.contains(this);if(t instanceof i.Arc)return t.contains(this);if(t instanceof i.Polygon)return t.contains(this)}toJSON(){return Object.assign({},this,{name:"point"})}svg(t={}){let{r:e,stroke:n,strokeWidth:s,fill:l,id:o,className:a}=t,h=o&&o.length>0?`id="${o}"`:"",f=a&&a.length>0?`class="${a}"`:"";return`
<circle cx="${this.x}" cy="${this.y}" r="${e||3}" stroke="${n||"black"}" stroke-width="${s||1}" fill="${l||"red"}" ${h} ${f} />`}}i.Point=ae;const jn=(...r)=>new i.Point(...r);i.point=jn;class Xn{constructor(...t){if(this.x=0,this.y=0,t.length!==0){if(t.length===1&&t[0]instanceof Array&&t[0].length===2){let e=t[0];if(typeof e[0]=="number"&&typeof e[1]=="number"){this.x=e[0],this.y=e[1];return}}if(t.length===1&&t[0]instanceof Object&&t[0].name==="vector"){let{x:e,y:n}=t[0];this.x=e,this.y=n;return}if(t.length===2){let e=t[0],n=t[1];if(typeof e=="number"&&typeof n=="number"){this.x=e,this.y=n;return}if(e instanceof i.Point&&n instanceof i.Point){this.x=n.x-e.x,this.y=n.y-e.y;return}}throw i.Errors.ILLEGAL_PARAMETERS}}clone(){return new i.Vector(this.x,this.y)}get slope(){let t=Math.atan2(this.y,this.x);return t<0&&(t=2*Math.PI+t),t}get length(){return Math.sqrt(this.dot(this))}equalTo(t){return i.Utils.EQ(this.x,t.x)&&i.Utils.EQ(this.y,t.y)}multiply(t){return new i.Vector(t*this.x,t*this.y)}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}normalize(){if(!i.Utils.EQ_0(this.length))return new i.Vector(this.x/this.length,this.y/this.length);throw i.Errors.ZERO_DIVISION}rotate(t){let n=new i.Point(this.x,this.y).rotate(t);return new i.Vector(n.x,n.y)}rotate90CCW(){return new i.Vector(-this.y,this.x)}rotate90CW(){return new i.Vector(this.y,-this.x)}invert(){return new i.Vector(-this.x,-this.y)}add(t){return new i.Vector(this.x+t.x,this.y+t.y)}subtract(t){return new i.Vector(this.x-t.x,this.y-t.y)}angleTo(t){let e=this.normalize(),n=t.normalize(),s=Math.atan2(e.cross(n),e.dot(n));return s<0&&(s+=2*Math.PI),s}projectionOn(t){let e=t.normalize(),n=this.dot(e);return e.multiply(n)}toJSON(){return Object.assign({},this,{name:"vector"})}}i.Vector=Xn;const Zn=(...r)=>new i.Vector(...r);i.vector=Zn;class At{constructor(...t){if(this.ps=new i.Point,this.pe=new i.Point,t.length!==0){if(t.length===1&&t[0]instanceof Array&&t[0].length===4){let e=t[0];this.ps=new i.Point(e[0],e[1]),this.pe=new i.Point(e[2],e[3]);return}if(t.length===1&&t[0]instanceof Object&&t[0].name==="segment"){let{ps:e,pe:n}=t[0];this.ps=new i.Point(e.x,e.y),this.pe=new i.Point(n.x,n.y);return}if(t.length===1&&t[0]instanceof i.Point){this.ps=t[0].clone();return}if(t.length===2&&t[0]instanceof i.Point&&t[1]instanceof i.Point){this.ps=t[0].clone(),this.pe=t[1].clone();return}if(t.length===4){this.ps=new i.Point(t[0],t[1]),this.pe=new i.Point(t[2],t[3]);return}throw i.Errors.ILLEGAL_PARAMETERS}}clone(){return new i.Segment(this.start,this.end)}get start(){return this.ps}get end(){return this.pe}get vertices(){return[this.ps.clone(),this.pe.clone()]}get length(){return this.start.distanceTo(this.end)[0]}get slope(){return new i.Vector(this.start,this.end).slope}get box(){return new i.Box(Math.min(this.start.x,this.end.x),Math.min(this.start.y,this.end.y),Math.max(this.start.x,this.end.x),Math.max(this.start.y,this.end.y))}equalTo(t){return this.ps.equalTo(t.ps)&&this.pe.equalTo(t.pe)}contains(t){return i.Utils.EQ_0(this.distanceToPoint(t))}intersect(t){if(t instanceof i.Point)return this.contains(t)?[t]:[];if(t instanceof i.Line)return kt(this,t);if(t instanceof i.Segment)return Tt(this,t);if(t instanceof i.Circle)return Ut(this,t);if(t instanceof i.Box)return Tn(this,t);if(t instanceof i.Arc)return ot(this,t);if(t instanceof i.Polygon)return oe(this,t)}distanceTo(t){if(t instanceof i.Point){let[e,n]=i.Distance.point2segment(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Circle){let[e,n]=i.Distance.segment2circle(this,t);return[e,n]}if(t instanceof i.Line){let[e,n]=i.Distance.segment2line(this,t);return[e,n]}if(t instanceof i.Segment){let[e,n]=i.Distance.segment2segment(this,t);return[e,n]}if(t instanceof i.Arc){let[e,n]=i.Distance.segment2arc(this,t);return[e,n]}if(t instanceof i.Polygon){let[e,n]=i.Distance.shape2polygon(this,t);return[e,n]}if(t instanceof i.PlanarSet){let[e,n]=i.Distance.shape2planarSet(this,t);return[e,n]}}tangentInStart(){return new i.Vector(this.start,this.end).normalize()}tangentInEnd(){return new i.Vector(this.end,this.start).normalize()}reverse(){return new At(this.end,this.start)}split(t){return this.start.equalTo(t)?[null,this.clone()]:this.end.equalTo(t)?[this.clone(),null]:[new i.Segment(this.start,t),new i.Segment(t,this.end)]}middle(){return new i.Point((this.start.x+this.end.x)/2,(this.start.y+this.end.y)/2)}pointAtLength(t){if(t>this.length||t<0)return null;if(t==0)return this.start;if(t==this.length)return this.end;let e=t/this.length;return new i.Point((this.end.x-this.start.x)*e+this.start.x,(this.end.y-this.start.y)*e+this.start.y)}distanceToPoint(t){let[e,...n]=i.Distance.point2segment(t,this);return e}definiteIntegral(t=0){let e=this.end.x-this.start.x,n=this.start.y-t,s=this.end.y-t;return e*(n+s)/2}translate(...t){return new At(this.ps.translate(...t),this.pe.translate(...t))}rotate(t=0,e=new i.Point){let n=new i.Matrix;return n=n.translate(e.x,e.y).rotate(t).translate(-e.x,-e.y),this.transform(n)}transform(t=new i.Matrix){return new At(this.ps.transform(t),this.pe.transform(t))}isZeroLength(){return this.ps.equalTo(this.pe)}sortPoints(t){return new i.Line(this.start,this.end).sortPoints(t)}toJSON(){return Object.assign({},this,{name:"segment"})}svg(t={}){let{stroke:e,strokeWidth:n,id:s,className:l}=t,o=s&&s.length>0?`id="${s}"`:"",a=l&&l.length>0?`class="${l}"`:"";return`
<line x1="${this.start.x}" y1="${this.start.y}" x2="${this.end.x}" y2="${this.end.y}" stroke="${e||"black"}" stroke-width="${n||1}" ${o} ${a} />`}}i.Segment=At;const Jn=(...r)=>new i.Segment(...r);i.segment=Jn;let{vector:Bt}=i;class fe{constructor(...t){if(this.pt=new i.Point,this.norm=new i.Vector(0,1),t.length!=0){if(t.length==1&&t[0]instanceof Object&&t[0].name==="line"){let{pt:e,norm:n}=t[0];this.pt=new i.Point(e),this.norm=new i.Vector(n);return}if(t.length==2){let e=t[0],n=t[1];if(e instanceof i.Point&&n instanceof i.Point){this.pt=e,this.norm=fe.points2norm(e,n),this.norm.dot(Bt(this.pt.x,this.pt.y))>=0&&this.norm.invert();return}if(e instanceof i.Point&&n instanceof i.Vector){if(i.Utils.EQ_0(n.x)&&i.Utils.EQ_0(n.y))throw i.Errors.ILLEGAL_PARAMETERS;this.pt=e.clone(),this.norm=n.clone(),this.norm=this.norm.normalize(),this.norm.dot(Bt(this.pt.x,this.pt.y))>=0&&this.norm.invert();return}if(e instanceof i.Vector&&n instanceof i.Point){if(i.Utils.EQ_0(e.x)&&i.Utils.EQ_0(e.y))throw i.Errors.ILLEGAL_PARAMETERS;this.pt=n.clone(),this.norm=e.clone(),this.norm=this.norm.normalize(),this.norm.dot(Bt(this.pt.x,this.pt.y))>=0&&this.norm.invert();return}}throw i.Errors.ILLEGAL_PARAMETERS}}clone(){return new i.Line(this.pt,this.norm)}get start(){}get end(){}get length(){return Number.POSITIVE_INFINITY}get box(){return new i.Box(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}get middle(){}get slope(){return new i.Vector(this.norm.y,-this.norm.x).slope}get standard(){let t=this.norm.x,e=this.norm.y,n=this.norm.dot(this.pt);return[t,e,n]}parallelTo(t){return i.Utils.EQ_0(this.norm.cross(t.norm))}incidentTo(t){return this.parallelTo(t)&&this.pt.on(t)}contains(t){if(this.pt.equalTo(t))return!0;let e=new i.Vector(this.pt,t);return i.Utils.EQ_0(this.norm.dot(e))}coord(t){return Bt(t.x,t.y).cross(this.norm)}intersect(t){if(t instanceof i.Point)return this.contains(t)?[t]:[];if(t instanceof i.Line)return Rt(this,t);if(t instanceof i.Circle)return ct(this,t);if(t instanceof i.Box)return It(this,t);if(t instanceof i.Segment)return kt(t,this);if(t instanceof i.Arc)return ie(this,t);if(t instanceof i.Polygon)return Mt(this,t)}distanceTo(t){if(t instanceof i.Point){let[e,n]=i.Distance.point2line(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Circle){let[e,n]=i.Distance.circle2line(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Segment){let[e,n]=i.Distance.segment2line(t,this);return[e,n.reverse()]}if(t instanceof i.Arc){let[e,n]=i.Distance.arc2line(t,this);return[e,n.reverse()]}if(t instanceof i.Polygon){let[e,n]=i.Distance.shape2polygon(this,t);return[e,n]}}split(t){if(t instanceof i.Point)return[new i.Ray(t,this.norm.invert()),new i.Ray(t,this.norm)];{let e=new i.Multiline([this]),n=this.sortPoints(t);return e.split(n),e.toShapes()}}sortPoints(t){return t.slice().sort((e,n)=>this.coord(e)<this.coord(n)?-1:this.coord(e)>this.coord(n)?1:0)}toJSON(){return Object.assign({},this,{name:"line"})}svg(t,e={}){let n=It(this,t);if(n.length===0)return"";let s=n[0],l=n.length==2?n[1]:n.find(a=>!a.equalTo(s));return l===void 0&&(l=s),new i.Segment(s,l).svg(e)}static points2norm(t,e){if(t.equalTo(e))throw i.Errors.ILLEGAL_PARAMETERS;return new i.Vector(t,e).normalize().rotate90CCW()}}i.Line=fe;const Kn=(...r)=>new i.Line(...r);i.line=Kn;class ti{constructor(...t){if(this.pc=new i.Point,this.r=1,t.length==1&&t[0]instanceof Object&&t[0].name==="circle"){let{pc:e,r:n}=t[0];this.pc=new i.Point(e),this.r=n;return}else{let[e,n]=[...t];e&&e instanceof i.Point&&(this.pc=e.clone()),n!==void 0&&(this.r=n);return}}clone(){return new i.Circle(this.pc.clone(),this.r)}get center(){return this.pc}get box(){return new i.Box(this.pc.x-this.r,this.pc.y-this.r,this.pc.x+this.r,this.pc.y+this.r)}contains(t){if(t instanceof i.Point)return i.Utils.LE(t.distanceTo(this.center)[0],this.r);if(t instanceof i.Segment)return i.Utils.LE(t.start.distanceTo(this.center)[0],this.r)&&i.Utils.LE(t.end.distanceTo(this.center)[0],this.r);if(t instanceof i.Arc)return this.intersect(t).length===0&&i.Utils.LE(t.start.distanceTo(this.center)[0],this.r)&&i.Utils.LE(t.end.distanceTo(this.center)[0],this.r);if(t instanceof i.Circle)return this.intersect(t).length===0&&i.Utils.LE(t.r,this.r)&&i.Utils.LE(t.center.distanceTo(this.center)[0],this.r)}toArc(t=!0){return new i.Arc(this.center,this.r,Math.PI,-Math.PI,t)}intersect(t){if(t instanceof i.Point)return this.contains(t)?[t]:[];if(t instanceof i.Line)return ct(t,this);if(t instanceof i.Segment)return Ut(t,this);if(t instanceof i.Circle)return Oe(t,this);if(t instanceof i.Box)return bn(this,t);if(t instanceof i.Arc)return se(t,this);if(t instanceof i.Polygon)return Ce(this,t)}distanceTo(t){if(t instanceof i.Point){let[e,n]=i.Distance.point2circle(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Circle){let[e,n]=i.Distance.circle2circle(this,t);return[e,n]}if(t instanceof i.Line){let[e,n]=i.Distance.circle2line(this,t);return[e,n]}if(t instanceof i.Segment){let[e,n]=i.Distance.segment2circle(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Arc){let[e,n]=i.Distance.arc2circle(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Polygon){let[e,n]=i.Distance.shape2polygon(this,t);return[e,n]}if(t instanceof i.PlanarSet){let[e,n]=i.Distance.shape2planarSet(this,t);return[e,n]}}toJSON(){return Object.assign({},this,{name:"circle"})}svg(t={}){let{stroke:e,strokeWidth:n,fill:s,fillOpacity:l,id:o,className:a}=t,h=o&&o.length>0?`id="${o}"`:"",f=a&&a.length>0?`class="${a}"`:"";return`
<circle cx="${this.pc.x}" cy="${this.pc.y}" r="${this.r}" stroke="${e||"black"}" stroke-width="${n||1}" fill="${s||"none"}" fill-opacity="${l||1}" ${h} ${f} />`}}i.Circle=ti;const ei=(...r)=>new i.Circle(...r);i.circle=ei;class ni{constructor(...t){if(this.pc=new i.Point,this.r=1,this.startAngle=0,this.endAngle=2*Math.PI,this.counterClockwise=i.CCW,t.length!=0)if(t.length==1&&t[0]instanceof Object&&t[0].name==="arc"){let{pc:e,r:n,startAngle:s,endAngle:l,counterClockwise:o}=t[0];this.pc=new i.Point(e.x,e.y),this.r=n,this.startAngle=s,this.endAngle=l,this.counterClockwise=o;return}else{let[e,n,s,l,o]=[...t];e&&e instanceof i.Point&&(this.pc=e.clone()),n!==void 0&&(this.r=n),s!==void 0&&(this.startAngle=s),l!==void 0&&(this.endAngle=l),o!==void 0&&(this.counterClockwise=o);return}}clone(){return new i.Arc(this.pc.clone(),this.r,this.startAngle,this.endAngle,this.counterClockwise)}get sweep(){if(i.Utils.EQ(this.startAngle,this.endAngle))return 0;if(i.Utils.EQ(Math.abs(this.startAngle-this.endAngle),i.PIx2))return i.PIx2;let t;return this.counterClockwise?t=i.Utils.GT(this.endAngle,this.startAngle)?this.endAngle-this.startAngle:this.endAngle-this.startAngle+i.PIx2:t=i.Utils.GT(this.startAngle,this.endAngle)?this.startAngle-this.endAngle:this.startAngle-this.endAngle+i.PIx2,i.Utils.GT(t,i.PIx2)&&(t-=i.PIx2),i.Utils.LT(t,0)&&(t+=i.PIx2),t}get start(){return new i.Point(this.pc.x+this.r,this.pc.y).rotate(this.startAngle,this.pc)}get end(){return new i.Point(this.pc.x+this.r,this.pc.y).rotate(this.endAngle,this.pc)}get center(){return this.pc.clone()}get vertices(){return[this.start.clone(),this.end.clone()]}get length(){return Math.abs(this.sweep*this.r)}get box(){let e=this.breakToFunctional().reduce((n,s)=>n.merge(s.start.box),new i.Box);return e=e.merge(this.end.box),e}contains(t){if(!i.Utils.EQ(this.pc.distanceTo(t)[0],this.r))return!1;if(t.equalTo(this.start))return!0;let e=new i.Vector(this.pc,t).slope,n=new i.Arc(this.pc,this.r,this.startAngle,e,this.counterClockwise);return i.Utils.LE(n.length,this.length)}split(t){if(this.start.equalTo(t))return[null,this.clone()];if(this.end.equalTo(t))return[this.clone(),null];let e=new i.Vector(this.pc,t).slope;return[new i.Arc(this.pc,this.r,this.startAngle,e,this.counterClockwise),new i.Arc(this.pc,this.r,e,this.endAngle,this.counterClockwise)]}middle(){let t=this.counterClockwise?this.startAngle+this.sweep/2:this.startAngle-this.sweep/2;return new i.Arc(this.pc,this.r,this.startAngle,t,this.counterClockwise).end}pointAtLength(t){if(t>this.length||t<0)return null;if(t==0)return this.start;if(t==this.length)return this.end;let e=t/this.length,n=this.counterClockwise?this.startAngle+this.sweep*e:this.startAngle-this.sweep*e;return new i.Arc(this.pc,this.r,this.startAngle,n,this.counterClockwise).end}chordHeight(){return(1-Math.cos(Math.abs(this.sweep/2)))*this.r}intersect(t){if(t instanceof i.Point)return this.contains(t)?[t]:[];if(t instanceof i.Line)return ie(t,this);if(t instanceof i.Circle)return se(this,t);if(t instanceof i.Segment)return ot(t,this);if(t instanceof i.Box)return Pn(this,t);if(t instanceof i.Arc)return re(this,t);if(t instanceof i.Polygon)return le(this,t)}distanceTo(t){if(t instanceof i.Point){let[e,n]=i.Distance.point2arc(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Circle){let[e,n]=i.Distance.arc2circle(this,t);return[e,n]}if(t instanceof i.Line){let[e,n]=i.Distance.arc2line(this,t);return[e,n]}if(t instanceof i.Segment){let[e,n]=i.Distance.segment2arc(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Arc){let[e,n]=i.Distance.arc2arc(this,t);return[e,n]}if(t instanceof i.Polygon){let[e,n]=i.Distance.shape2polygon(this,t);return[e,n]}if(t instanceof i.PlanarSet){let[e,n]=i.Distance.shape2planarSet(this,t);return[e,n]}}breakToFunctional(){let t=[],e=[0,Math.PI/2,2*Math.PI/2,3*Math.PI/2],n=[this.pc.translate(this.r,0),this.pc.translate(0,this.r),this.pc.translate(-this.r,0),this.pc.translate(0,-this.r)],s=[];for(let l=0;l<4;l++)n[l].on(this)&&s.push(new i.Arc(this.pc,this.r,this.startAngle,e[l],this.counterClockwise));if(s.length==0)t.push(this.clone());else{s.sort((a,h)=>a.length-h.length);for(let a=0;a<s.length;a++){let h=t.length>0?t[t.length-1]:void 0,f;h?f=new i.Arc(this.pc,this.r,h.endAngle,s[a].endAngle,this.counterClockwise):f=new i.Arc(this.pc,this.r,this.startAngle,s[a].endAngle,this.counterClockwise),i.Utils.EQ_0(f.length)||t.push(f.clone())}let l=t.length>0?t[t.length-1]:void 0,o;l?o=new i.Arc(this.pc,this.r,l.endAngle,this.endAngle,this.counterClockwise):o=new i.Arc(this.pc,this.r,this.startAngle,this.endAngle,this.counterClockwise),!i.Utils.EQ_0(o.length)&&!i.Utils.EQ(o.sweep,2*Math.PI)&&t.push(o.clone())}return t}tangentInStart(){let t=new i.Vector(this.pc,this.start),e=this.counterClockwise?Math.PI/2:-Math.PI/2;return t.rotate(e).normalize()}tangentInEnd(){let t=new i.Vector(this.pc,this.end),e=this.counterClockwise?-Math.PI/2:Math.PI/2;return t.rotate(e).normalize()}reverse(){return new i.Arc(this.pc,this.r,this.endAngle,this.startAngle,!this.counterClockwise)}translate(...t){let e=this.clone();return e.pc=this.pc.translate(...t),e}rotate(t=0,e=new i.Point){let n=new i.Matrix;return n=n.translate(e.x,e.y).rotate(t).translate(-e.x,-e.y),this.transform(n)}scale(t=1,e=1){let n=new i.Matrix;return n=n.scale(t,e),this.transform(n)}transform(t=new i.Matrix){let e=this.start.transform(t),n=this.end.transform(t),s=this.pc.transform(t),l=this.counterClockwise;return t.a*t.d<0&&(l=!l),i.Arc.arcSE(s,e,n,l)}static arcSE(t,e,n,s){let{vector:l}=i,o=l(t,e).slope,a=l(t,n).slope;i.Utils.EQ(o,a)&&(a+=2*Math.PI,s=!0);let h=l(t,e).length;return new i.Arc(t,h,o,a,s)}definiteIntegral(t=0){return this.breakToFunctional().reduce((s,l)=>s+l.circularSegmentDefiniteIntegral(t),0)}circularSegmentDefiniteIntegral(t){let e=new i.Line(this.start,this.end),n=this.pc.leftTo(e),l=new i.Segment(this.start,this.end).definiteIntegral(t),o=this.circularSegmentArea();return n?l-o:l+o}circularSegmentArea(){return .5*this.r*this.r*(this.sweep-Math.sin(this.sweep))}sortPoints(t){let{vector:e}=i;return t.slice().sort((n,s)=>{let l=e(this.pc,n).slope,o=e(this.pc,s).slope;return l<o?-1:l>o?1:0})}toJSON(){return Object.assign({},this,{name:"arc"})}svg(t={}){let e=this.sweep<=Math.PI?"0":"1",n=this.counterClockwise?"1":"0",{stroke:s,strokeWidth:l,fill:o,id:a,className:h}=t,f=a&&a.length>0?`id="${a}"`:"",u=h&&h.length>0?`class="${h}"`:"";return i.Utils.EQ(this.sweep,2*Math.PI)?new i.Circle(this.pc,this.r).svg(t):`
<path d="M${this.start.x},${this.start.y}
                             A${this.r},${this.r} 0 ${e},${n} ${this.end.x},${this.end.y}"
                    stroke="${s||"black"}" stroke-width="${l||1}" fill="${o||"none"}" ${f} ${u} />`}}i.Arc=ni;const ii=(...r)=>new i.Arc(...r);i.arc=ii;class Ft{constructor(t=void 0,e=void 0,n=void 0,s=void 0){this.xmin=t,this.ymin=e,this.xmax=n,this.ymax=s}clone(){return new Ft(this.xmin,this.ymin,this.xmax,this.ymax)}get low(){return new i.Point(this.xmin,this.ymin)}get high(){return new i.Point(this.xmax,this.ymax)}get max(){return this.clone()}get center(){return new i.Point((this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)}get width(){return Math.abs(this.xmax-this.xmin)}get height(){return Math.abs(this.ymax-this.ymin)}get box(){return this.clone()}not_intersect(t){return this.xmax<t.xmin||this.xmin>t.xmax||this.ymax<t.ymin||this.ymin>t.ymax}intersect(t){return!this.not_intersect(t)}merge(t){return new Ft(this.xmin===void 0?t.xmin:Math.min(this.xmin,t.xmin),this.ymin===void 0?t.ymin:Math.min(this.ymin,t.ymin),this.xmax===void 0?t.xmax:Math.max(this.xmax,t.xmax),this.ymax===void 0?t.ymax:Math.max(this.ymax,t.ymax))}less_than(t){return!!(this.low.lessThan(t.low)||this.low.equalTo(t.low)&&this.high.lessThan(t.high))}equal_to(t){return this.low.equalTo(t.low)&&this.high.equalTo(t.high)}output(){return this.clone()}static comparable_max(t,e){return t.merge(e)}static comparable_less_than(t,e){return t.lessThan(e)}set(t,e,n,s){this.xmin=t,this.ymin=e,this.xmax=n,this.ymax=s}toPoints(){return[new i.Point(this.xmin,this.ymin),new i.Point(this.xmax,this.ymin),new i.Point(this.xmax,this.ymax),new i.Point(this.xmin,this.ymax)]}toSegments(){let t=this.toPoints();return[new i.Segment(t[0],t[1]),new i.Segment(t[1],t[2]),new i.Segment(t[2],t[3]),new i.Segment(t[3],t[0])]}svg(t={}){let{stroke:e,strokeWidth:n,fill:s,id:l,className:o}=t,a=l&&l.length>0?`id="${l}"`:"",h=o&&o.length>0?`class="${o}"`:"",f=this.xmax-this.xmin,u=this.ymax-this.ymin;return`
<rect x="${this.xmin}" y="${this.ymin}" width=${f} height=${u} stroke="${e||"black"}" stroke-width="${n||1}" fill="${s||"none"}" ${a} ${h} />`}}i.Box=Ft;const ri=(...r)=>new i.Box(...r);i.box=ri;class si{constructor(t){this.shape=t,this.next=void 0,this.prev=void 0,this.face=void 0,this.arc_length=0,this.bvStart=void 0,this.bvEnd=void 0,this.bv=void 0,this.overlap=void 0}get start(){return this.shape.start}get end(){return this.shape.end}get length(){return this.shape.length}get box(){return this.shape.box}isSegment(){return this.shape instanceof i.Segment}isArc(){return this.shape instanceof i.Arc}middle(){return this.shape.middle()}pointAtLength(t){return this.shape.pointAtLength(t)}contains(t){return this.shape.contains(t)}setInclusion(t){if(this.bv!==void 0)return this.bv;if(this.shape instanceof i.Line||this.shape instanceof i.Ray)return this.bv=i.OUTSIDE,this.bv;if(this.bvStart===void 0&&(this.bvStart=bt(t,this.start)),this.bvEnd===void 0&&(this.bvEnd=bt(t,this.end)),this.bvStart===i.OUTSIDE||this.bvEnd==i.OUTSIDE)this.bv=i.OUTSIDE;else if(this.bvStart===i.INSIDE||this.bvEnd==i.INSIDE)this.bv=i.INSIDE;else{let e=bt(t,this.middle());this.bv=e}return this.bv}setOverlap(t){let e,n=this.shape,s=t.shape;n instanceof i.Segment&&s instanceof i.Segment?n.start.equalTo(s.start)&&n.end.equalTo(s.end)?e=i.OVERLAP_SAME:n.start.equalTo(s.end)&&n.end.equalTo(s.start)&&(e=i.OVERLAP_OPPOSITE):(n instanceof i.Arc&&s instanceof i.Arc||n instanceof i.Segment&&s instanceof i.Arc||n instanceof i.Arc&&s instanceof i.Segment)&&(n.start.equalTo(s.start)&&n.end.equalTo(s.end)&&n.middle().equalTo(s.middle())?e=i.OVERLAP_SAME:n.start.equalTo(s.end)&&n.end.equalTo(s.start)&&n.middle().equalTo(s.middle())&&(e=i.OVERLAP_OPPOSITE)),this.overlap===void 0&&(this.overlap=e),t.overlap===void 0&&(t.overlap=e)}svg(){if(this.shape instanceof i.Segment)return` L${this.shape.end.x},${this.shape.end.y}`;if(this.shape instanceof i.Arc){let t=this.shape,e,n=t.counterClockwise?"1":"0";if(i.Utils.EQ(t.sweep,2*Math.PI)){let s=t.counterClockwise?1:-1,l=new i.Arc(t.pc,t.r,t.startAngle,t.startAngle+s*Math.PI,t.counterClockwise),o=new i.Arc(t.pc,t.r,t.startAngle+s*Math.PI,t.endAngle,t.counterClockwise);return e="0",` A${l.r},${l.r} 0 ${e},${n} ${l.end.x},${l.end.y}
                    A${o.r},${o.r} 0 ${e},${n} ${o.end.x},${o.end.y}`}else return e=t.sweep<=Math.PI?"0":"1",` A${t.r},${t.r} 0 ${e},${n} ${t.end.x},${t.end.y}`}}toJSON(){return this.shape.toJSON()}}i.Edge=si;class oi extends Qt{constructor(t,e){super(t,e),this.setCircularLinks()}setCircularLinks(){this.isEmpty()||(this.last.next=this.first,this.first.prev=this.last)}[Symbol.iterator](){let t;return{next:()=>{let e=t||this.first,n=this.first?t?t===this.first:!1:!0;return t=e?e.next:void 0,{value:e,done:n}}}}append(t){return super.append(t),this.setCircularLinks(),this}insert(t,e){return super.insert(t,e),this.setCircularLinks(),this}remove(t){return super.remove(t),this}}class gt extends oi{constructor(t,...e){if(super(),this._box=void 0,this._orientation=void 0,e.length!=0){if(e.length==1){if(e[0]instanceof Array){let n=e[0];if(n.length==0)return;if(n.every(s=>s instanceof i.Point)){let s=gt.points2segments(n);this.shapes2face(t.edges,s)}else if(n.every(s=>s instanceof Array&&s.length===2)){let s=n.map(o=>new i.Point(o[0],o[1])),l=gt.points2segments(s);this.shapes2face(t.edges,l)}else if(n.every(s=>s instanceof i.Segment||s instanceof i.Arc))this.shapes2face(t.edges,n);else if(n.every(s=>s.name==="segment"||s.name==="arc")){let s=[];for(let l of n){let o;l.name==="segment"?o=new i.Segment(l):o=new i.Arc(l),s.push(o)}this.shapes2face(t.edges,s)}}else if(e[0]instanceof gt){let n=e[0];this.first=n.first,this.last=n.last;for(let s of n)t.edges.add(s)}else if(e[0]instanceof i.Circle)this.shapes2face(t.edges,[e[0].toArc(i.CCW)]);else if(e[0]instanceof i.Box){let n=e[0];this.shapes2face(t.edges,[new i.Segment(new i.Point(n.xmin,n.ymin),new i.Point(n.xmax,n.ymin)),new i.Segment(new i.Point(n.xmax,n.ymin),new i.Point(n.xmax,n.ymax)),new i.Segment(new i.Point(n.xmax,n.ymax),new i.Point(n.xmin,n.ymax)),new i.Segment(new i.Point(n.xmin,n.ymax),new i.Point(n.xmin,n.ymin))])}}e.length==2&&e[0]instanceof i.Edge&&e[1]instanceof i.Edge&&(this.first=e[0],this.last=e[1],this.last.next=this.first,this.first.prev=this.last,this.setArcLength())}}get edges(){return this.toArray()}get shapes(){return this.edges.map(t=>t.shape.clone())}get box(){if(this._box===void 0){let t=new i.Box;for(let e of this)t=t.merge(e.box);this._box=t}return this._box}get perimeter(){return this.last.arc_length+this.last.length}pointAtLength(t){if(t>this.perimeter||t<0)return null;let e=null;for(let n of this)if(t>=n.arc_length&&(n===this.last||t<n.next.arc_length)){e=n.pointAtLength(t-n.arc_length);break}return e}static points2segments(t){let e=[];for(let n=0;n<t.length;n++)t[n].equalTo(t[(n+1)%t.length])||e.push(new i.Segment(t[n],t[(n+1)%t.length]));return e}shapes2face(t,e){for(let n of e){let s=new i.Edge(n);this.append(s),t.add(s)}}append(t){return super.append(t),this.setOneEdgeArcLength(t),t.face=this,this}insert(t,e){return super.insert(t,e),this.setOneEdgeArcLength(t),t.face=this,this}remove(t){return super.remove(t),this.setArcLength(),this}reverse(){let t=[],e=this.last;do e.shape=e.shape.reverse(),t.push(e),e=e.prev;while(e!==this.last);this.first=void 0,this.last=void 0;for(let n of t)this.first===void 0?(n.prev=n,n.next=n,this.first=n,this.last=n):(n.prev=this.last,this.last.next=n,this.last=n,this.last.next=this.first,this.first.prev=this.last),this.setOneEdgeArcLength(n);this._orientation!==void 0&&(this._orientation=void 0,this._orientation=this.orientation())}setArcLength(){for(let t of this)this.setOneEdgeArcLength(t),t.face=this}setOneEdgeArcLength(t){t===this.first?t.arc_length=0:t.arc_length=t.prev.arc_length+t.prev.length}area(){return Math.abs(this.signedArea())}signedArea(){let t=0,e=this.box.ymin;for(let n of this)t+=n.shape.definiteIntegral(e);return t}orientation(){if(this._orientation===void 0){let t=this.signedArea();i.Utils.EQ_0(t)?this._orientation=i.ORIENTATION.NOT_ORIENTABLE:i.Utils.LT(t,0)?this._orientation=i.ORIENTATION.CCW:this._orientation=i.ORIENTATION.CW}return this._orientation}isSimple(t){return gt.getSelfIntersections(this,t,!0).length==0}static getSelfIntersections(t,e,n=!1){let s=[];for(let l of t){let o=e.search(l.box);for(let a of o){if(l===a||a.face!==t||l.shape instanceof i.Segment&&a.shape instanceof i.Segment&&(l.next===a||l.prev===a))continue;let h=l.shape.intersect(a.shape);for(let f of h)if(!(f.equalTo(l.start)&&f.equalTo(a.end)&&a===l.prev)&&!(f.equalTo(l.end)&&f.equalTo(a.start)&&a===l.next)&&(s.push(f),n))break;if(s.length>0&&n)break}if(s.length>0&&n)break}return s}findEdgeByPoint(t){let e;for(let n of this)if(n.shape.contains(t)){e=n;break}return e}toPolygon(){return new i.Polygon(this.shapes)}toJSON(){return this.edges.map(t=>t.toJSON())}svg(){let t=`
M${this.first.start.x},${this.first.start.y}`;for(let e of this)t+=e.svg();return t+=" z",t}}i.Face=gt;class he{constructor(...t){if(this.pt=new i.Point,this.norm=new i.Vector(0,1),t.length!=0&&(t.length>=1&&t[0]instanceof i.Point&&(this.pt=t[0].clone()),t.length!==1)){if(t.length===2&&t[1]instanceof i.Vector){this.norm=t[1].clone();return}throw i.Errors.ILLEGAL_PARAMETERS}}clone(){return new he(this.pt,this.norm)}get slope(){return new i.Vector(this.norm.y,-this.norm.x).slope}get box(){let t=this.slope;return new i.Box(t>Math.PI/2&&t<3*Math.PI/2?Number.NEGATIVE_INFINITY:this.pt.x,t>=0&&t<=Math.PI?this.pt.y:Number.NEGATIVE_INFINITY,t>=Math.PI/2&&t<=3*Math.PI/2?this.pt.x:Number.POSITIVE_INFINITY,t>=Math.PI&&t<=2*Math.PI||t==0?this.pt.y:Number.POSITIVE_INFINITY)}get start(){return this.pt}get end(){}get length(){return Number.POSITIVE_INFINITY}contains(t){if(this.pt.equalTo(t))return!0;let e=new i.Vector(this.pt,t);return i.Utils.EQ_0(this.norm.dot(e))&&i.Utils.GE(e.cross(this.norm),0)}split(t){return this.contains(t)?this.pt.equalTo(t)?[this]:[new i.Segment(this.pt,t),new i.Ray(t,this.norm)]:[]}intersect(t){if(t instanceof i.Segment)return this.intersectRay2Segment(this,t);if(t instanceof i.Arc)return this.intersectRay2Arc(this,t)}intersectRay2Segment(t,e){let n=[],s=new i.Line(t.start,t.norm),l=s.intersect(e);for(let o of l)t.contains(o)&&n.push(o);return l.length==2&&n.length==1&&t.start.on(s)&&n.push(t.start),n}intersectRay2Arc(t,e){let n=[],l=new i.Line(t.start,t.norm).intersect(e);for(let o of l)t.contains(o)&&n.push(o);return n}svg(t,e={}){let n=new i.Line(this.pt,this.norm),s=It(n,t);return s=s.filter(o=>this.contains(o)),s.length===0||s.length===2?"":new i.Segment(this.pt,s[0]).svg(e)}}i.Ray=he;const li=(...r)=>new i.Ray(...r);i.ray=li;class _t{constructor(){this.faces=new i.PlanarSet,this.edges=new i.PlanarSet;let t=[...arguments];if(t.length===1&&(t[0]instanceof Array&&t[0].length>0||t[0]instanceof i.Circle||t[0]instanceof i.Box)){let e=t[0];if(t[0]instanceof Array&&t[0].every(n=>n instanceof Array))if(e.every(n=>n instanceof Array&&n.length===2&&typeof n[0]=="number"&&typeof n[1]=="number"))this.faces.add(new i.Face(this,e));else for(let n of e)if(n instanceof Array&&n[0]instanceof Array&&n[0].every(s=>s instanceof Array&&s.length===2&&typeof s[0]=="number"&&typeof s[1]=="number"))for(let s of n)this.faces.add(new i.Face(this,s));else this.faces.add(new i.Face(this,n));else this.faces.add(new i.Face(this,e))}}get box(){return[...this.faces].reduce((t,e)=>t.merge(e.box),new i.Box)}get vertices(){return[...this.edges].map(t=>t.start)}clone(){let t=new _t;for(let e of this.faces)t.addFace(e.shapes);return t}isEmpty(){return this.edges.size===0}isValid(){let t=!0;for(let e of this.faces)if(!e.isSimple(this.edges)){t=!1;break}return t}area(){let t=[...this.faces].reduce((e,n)=>e+n.signedArea(),0);return Math.abs(t)}addFace(...t){let e=new i.Face(this,...t);return this.faces.add(e),e}deleteFace(t){for(let e of t)this.edges.delete(e);return this.faces.delete(t)}recreateFaces(){this.faces.clear();for(let n of this.edges)n.face=null;let t,e=!0;for(;e;){e=!1;for(let n of this.edges)if(n.face===null){t=n,e=!0;break}if(e){let n=t;do n=n.next;while(n.next!==t);this.addFace(t,n)}}}removeChain(t,e,n){if(n.next===e){this.deleteFace(t);return}for(let s=e;s!==n.next;s=s.next)if(t.remove(s),this.edges.delete(s),t.isEmpty()){this.deleteFace(t);break}}addVertex(t,e){let n=e.shape.split(t);if(n[0]===null)return e.prev;if(n[1]===null)return e;let s=new i.Edge(n[0]),l=e.prev;return e.face.insert(s,l),this.edges.delete(e),this.edges.add(s),e.shape=n[1],this.edges.add(e),s}cut(t){let e=[this.clone()];for(let n of t){if(n.setInclusion(this)!==xt)continue;let s=n.shape.start,l=n.shape.end,o=[];for(let a of e)if(a.findEdgeByPoint(s)===void 0)o.push(a);else{let[h,f]=a.cutFace(s,l);o.push(h,f)}e=o}return e}cutFace(t,e){let n=this.findEdgeByPoint(t),s=this.findEdgeByPoint(e);if(n.face!==s.face)return[];let l=this.addVertex(t,n);s=this.findEdgeByPoint(e);let o=this.addVertex(e,s),a=l.face,h=new i.Edge(new i.Segment(l.end,o.end)),f=new i.Edge(new i.Segment(o.end,l.end));l.next.prev=f,f.next=l.next,l.next=h,h.prev=l,o.next.prev=h,h.next=o.next,o.next=f,f.prev=o,this.edges.add(h),this.edges.add(f);let u=this.addFace(h,l),p=this.addFace(f,o);return this.faces.delete(a),[u.toPolygon(),p.toPolygon()]}cutWithLine(t){let e=this.clone(),n=new O([t]),s={int_points1:[],int_points2:[],int_points1_sorted:[],int_points2_sorted:[]};for(let a of e.edges){let h=Ne(a,t);for(let f of h)at(n.first,f,s.int_points1),at(a,f,s.int_points2)}if(s.int_points1.length===0)return e;s.int_points1_sorted=Yt(t,s.int_points1),s.int_points2_sorted=vt(s.int_points2),ht(n,s.int_points1_sorted),ht(e,s.int_points2_sorted),jt(s),s.int_points1_sorted=Yt(t,s.int_points1),s.int_points2_sorted=vt(s.int_points2),Xt(s.int_points1),Zt(s.int_points1,e);for(let a of s.int_points1_sorted)a.edge_before.bv===a.edge_after.bv&&(s.int_points2[a.id]=-1,a.id=-1);if(s.int_points1=s.int_points1.filter(a=>a.id>=0),s.int_points2=s.int_points2.filter(a=>a.id>=0),s.int_points1.length===0)return e;s.int_points1_sorted=Yt(t,s.int_points1),s.int_points2_sorted=vt(s.int_points2);let l=s.int_points1[0],o;for(let a of s.int_points1_sorted)a.edge_before.bv===xt&&(o=new i.Edge(new i.Segment(l.pt,a.pt)),we(s.int_points2[l.id],s.int_points2[a.id],o),e.edges.add(o),o=new i.Edge(new i.Segment(a.pt,l.pt)),we(s.int_points2[a.id],s.int_points2[l.id],o),e.edges.add(o)),l=a;return e.recreateFaces(),e}findEdgeByPoint(t){let e;for(let n of this.faces)if(e=n.findEdgeByPoint(t),e!==void 0)break;return e}splitToIslands(){if(this.isEmpty())return[];let t=this.toArray();t.sort((s,l)=>l.area()-s.area());let e=[...t[0].faces][0].orientation(),n=t.filter(s=>[...s.faces][0].orientation()===e);for(let s of t){let l=[...s.faces][0];if(l.orientation()!==e){for(let o of n)if(l.shapes.every(a=>o.contains(a))){o.addFace(l.shapes);break}}}return n}reverse(){for(let t of this.faces)t.reverse();return this}contains(t){if(t instanceof i.Point){let e=bt(this,t);return e===xt||e===M}else return $e(this,t)}distanceTo(t){if(t instanceof i.Point){let[e,n]=i.Distance.point2polygon(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Circle||t instanceof i.Line||t instanceof i.Segment||t instanceof i.Arc){let[e,n]=i.Distance.shape2polygon(t,this);return n=n.reverse(),[e,n]}if(t instanceof i.Polygon){let e=[Number.POSITIVE_INFINITY,new i.Segment],n,s;for(let l of this.edges){let o=e[0];[n,s]=i.Distance.shape2planarSet(l.shape,t.edges,o),i.Utils.LT(n,o)&&(e=[n,s])}return e}}intersect(t){if(t instanceof i.Point)return this.contains(t)?[t]:[];if(t instanceof i.Line)return Mt(t,this);if(t instanceof i.Circle)return Ce(t,this);if(t instanceof i.Segment)return oe(t,this);if(t instanceof i.Arc)return le(t,this);if(t instanceof i.Polygon)return Rn(t,this)}translate(t){let e=new _t;for(let n of this.faces)e.addFace(n.shapes.map(s=>s.translate(t)));return e}rotate(t=0,e=new i.Point){let n=new _t;for(let s of this.faces)n.addFace(s.shapes.map(l=>l.rotate(t,e)));return n}transform(t=new i.Matrix){let e=new _t;for(let n of this.faces)e.addFace(n.shapes.map(s=>s.transform(t)));return e}toJSON(){return[...this.faces].map(t=>t.toJSON())}toArray(){return[...this.faces].map(t=>t.toPolygon())}svg(t={}){let{stroke:e,strokeWidth:n,fill:s,fillRule:l,fillOpacity:o,id:a,className:h}=t,f=a&&a.length>0?`id="${a}"`:"",u=h&&h.length>0?`class="${h}"`:"",p=`
<path stroke="${e||"black"}" stroke-width="${n||1}" fill="${s||"lightcyan"}" fill-rule="${l||"evenodd"}" fill-opacity="${o||1}" ${f} ${u} d="`;for(let _ of this.faces)p+=_.svg();return p+=`" >
</path>`,p}}i.Polygon=_t;const ai=(...r)=>new i.Polygon(...r);i.polygon=ai;const{Circle:ue,Line:Fe,Point:Ve,Vector:Vt,Utils:ce}=i;class Lt{constructor(t){this.circle=t}get inversion_circle(){return this.circle}static inversePoint(t,e){const n=new Vt(t.pc,e),s=t.r*t.r,l=n.dot(n);return ce.EQ_0(l)?new Ve(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY):t.pc.translate(n.multiply(s/l))}static inverseCircle(t,e){const n=t.pc.distanceTo(e.pc)[0];if(ce.EQ(n,e.r)){let s=t.r*t.r/(2*e.r),l=new Vt(t.pc,e.pc);l=l.normalize();let o=t.pc.translate(l.multiply(s));return new Fe(o,l)}else{let s=new Vt(t.pc,e.pc),l=t.r*t.r/(s.dot(s)-e.r*e.r),o=t.pc.translate(s.multiply(l)),a=Math.abs(l)*e.r;return new ue(o,a)}}static inverseLine(t,e){const[n,s]=t.pc.distanceTo(e);if(ce.EQ_0(n))return e.clone();{let l=t.r*t.r/(2*n),o=new Vt(t.pc,s.end);return o=o.multiply(l/n),new ue(t.pc.translate(o),l)}}inverse(t){if(t instanceof Ve)return Lt.inversePoint(this.circle,t);if(t instanceof ue)return Lt.inverseCircle(this.circle,t);if(t instanceof Fe)return Lt.inverseLine(this.circle,t)}}i.Inversion=Lt;const fi=r=>new i.Inversion(r);i.inversion=fi;class d{static point2point(t,e){return t.distanceTo(e)}static point2line(t,e){let n=t.projectionOn(e);return[new i.Vector(t,n).length,new i.Segment(t,n)]}static point2circle(t,e){let[n,s]=t.distanceTo(e.center);if(i.Utils.EQ_0(n))return[e.r,new i.Segment(t,e.toArc().start)];{let l=Math.abs(n-e.r),o=new i.Vector(e.pc,t).normalize().multiply(e.r),a=e.pc.translate(o);return[l,new i.Segment(t,a)]}}static point2segment(t,e){if(e.start.equalTo(e.end))return d.point2point(t,e.start);let n=new i.Vector(e.start,e.end),s=new i.Vector(e.start,t),l=new i.Vector(e.end,t),o=n.dot(s),a=-n.dot(l),h,f;if(i.Utils.GE(o,0)&&i.Utils.GE(a,0)){let u=e.tangentInStart();return h=Math.abs(u.cross(s)),f=e.start.translate(u.multiply(u.dot(s))),[h,new i.Segment(t,f)]}else return o<0?t.distanceTo(e.start):t.distanceTo(e.end)}static point2arc(t,e){let n=new i.Circle(e.pc,e.r),s=[],l,o;return[l,o]=d.point2circle(t,n),o.end.on(e)&&s.push(d.point2circle(t,n)),s.push(d.point2point(t,e.start)),s.push(d.point2point(t,e.end)),d.sort(s),s[0]}static segment2line(t,e){let n=t.intersect(e);if(n.length>0)return[0,new i.Segment(n[0],n[0])];let s=[];return s.push(d.point2line(t.start,e)),s.push(d.point2line(t.end,e)),d.sort(s),s[0]}static segment2segment(t,e){let n=Tt(t,e);if(n.length>0)return[0,new i.Segment(n[0],n[0])];let s=[],l,o;return[l,o]=d.point2segment(e.start,t),s.push([l,o.reverse()]),[l,o]=d.point2segment(e.end,t),s.push([l,o.reverse()]),s.push(d.point2segment(t.start,e)),s.push(d.point2segment(t.end,e)),d.sort(s),s[0]}static segment2circle(t,e){let n=t.intersect(e);if(n.length>0)return[0,new i.Segment(n[0],n[0])];let s=new i.Line(t.ps,t.pe),[l,o]=d.point2line(e.center,s);if(i.Utils.GE(l,e.r)&&o.end.on(t))return d.point2circle(o.end,e);{let[a,h]=d.point2circle(t.start,e),[f,u]=d.point2circle(t.end,e);return i.Utils.LT(a,f)?[a,h]:[f,u]}}static segment2arc(t,e){let n=t.intersect(e);if(n.length>0)return[0,new i.Segment(n[0],n[0])];let s=new i.Line(t.ps,t.pe),l=new i.Circle(e.pc,e.r),[o,a]=d.point2line(l.center,s);if(i.Utils.GE(o,l.r)&&a.end.on(t)){let[p,_]=d.point2circle(a.end,l);if(_.end.on(e))return[p,_]}let h=[];h.push(d.point2arc(t.start,e)),h.push(d.point2arc(t.end,e));let f,u;return[f,u]=d.point2segment(e.start,t),h.push([f,u.reverse()]),[f,u]=d.point2segment(e.end,t),h.push([f,u.reverse()]),d.sort(h),h[0]}static circle2circle(t,e){let n=t.intersect(e);if(n.length>0)return[0,new i.Segment(n[0],n[0])];if(t.center.equalTo(e.center)){let s=t.toArc(),l=e.toArc();return d.point2point(s.start,l.start)}else{let s=new i.Line(t.center,e.center),l=s.intersect(t),o=s.intersect(e),a=[];return a.push(d.point2point(l[0],o[0])),a.push(d.point2point(l[0],o[1])),a.push(d.point2point(l[1],o[0])),a.push(d.point2point(l[1],o[1])),d.sort(a),a[0]}}static circle2line(t,e){let n=t.intersect(e);if(n.length>0)return[0,new i.Segment(n[0],n[0])];let[s,l]=d.point2line(t.center,e),[o,a]=d.point2circle(l.end,t);return a=a.reverse(),[o,a]}static arc2line(t,e){let n=e.intersect(t);if(n.length>0)return[0,new i.Segment(n[0],n[0])];let s=new i.Circle(t.center,t.r),[l,o]=d.point2line(s.center,e);if(i.Utils.GE(l,s.r)){let[a,h]=d.point2circle(o.end,s);if(h.end.on(t))return[a,h]}else{let a=[];return a.push(d.point2line(t.start,e)),a.push(d.point2line(t.end,e)),d.sort(a),a[0]}}static arc2circle(t,e){let n=t.intersect(e);if(n.length>0)return[0,new i.Segment(n[0],n[0])];let s=new i.Circle(t.center,t.r),[l,o]=d.circle2circle(s,e);if(o.start.on(t))return[l,o];{let a=[];return a.push(d.point2circle(t.start,e)),a.push(d.point2circle(t.end,e)),d.sort(a),a[0]}}static arc2arc(t,e){let n=t.intersect(e);if(n.length>0)return[0,new i.Segment(n[0],n[0])];let s=new i.Circle(t.center,t.r),l=new i.Circle(e.center,e.r),[o,a]=d.circle2circle(s,l);if(a.start.on(t)&&a.end.on(e))return[o,a];{let h=[],f,u;return[f,u]=d.point2arc(t.start,e),u.end.on(e)&&h.push([f,u]),[f,u]=d.point2arc(t.end,e),u.end.on(e)&&h.push([f,u]),[f,u]=d.point2arc(e.start,t),u.end.on(t)&&h.push([f,u.reverse()]),[f,u]=d.point2arc(e.end,t),u.end.on(t)&&h.push([f,u.reverse()]),[f,u]=d.point2point(t.start,e.start),h.push([f,u]),[f,u]=d.point2point(t.start,e.end),h.push([f,u]),[f,u]=d.point2point(t.end,e.start),h.push([f,u]),[f,u]=d.point2point(t.end,e.end),h.push([f,u]),d.sort(h),h[0]}}static point2polygon(t,e){let n=[Number.POSITIVE_INFINITY,new i.Segment];for(let s of e.edges){let[l,o]=s.shape instanceof i.Segment?d.point2segment(t,s.shape):d.point2arc(t,s.shape);i.Utils.LT(l,n[0])&&(n=[l,o])}return n}static shape2polygon(t,e){let n=[Number.POSITIVE_INFINITY,new i.Segment];for(let s of e.edges){let[l,o]=t.distanceTo(s.shape);i.Utils.LT(l,n[0])&&(n=[l,o])}return n}static polygon2polygon(t,e){let n=[Number.POSITIVE_INFINITY,new i.Segment];for(let s of t.edges)for(let l of e.edges){let[o,a]=s.shape.distanceTo(l.shape);i.Utils.LT(o,n[0])&&(n=[o,a])}return n}static box2box_minmax(t,e){let n=Math.max(Math.max(t.xmin-e.xmax,0),Math.max(e.xmin-t.xmax,0)),s=Math.max(Math.max(t.ymin-e.ymax,0),Math.max(e.ymin-t.ymax,0)),l=n*n+s*s,o=t.merge(e),a=o.xmax-o.xmin,h=o.ymax-o.ymin,f=a*a+h*h;return[l,f]}static minmax_tree_process_level(t,e,n,s){let l,o;for(let u of e)[l,o]=d.box2box_minmax(t.box,u.item.key),u.item.value instanceof i.Edge?s.insert([l,o],u.item.value.shape):s.insert([l,o],u.item.value),i.Utils.LT(o,n)&&(n=o);if(e.length===0)return n;let a=e.map(u=>u.left.isNil()?void 0:u.left).filter(u=>u!==void 0),h=e.map(u=>u.right.isNil()?void 0:u.right).filter(u=>u!==void 0),f=[...a,...h].filter(u=>{let[p,_]=d.box2box_minmax(t.box,u.max);return i.Utils.LE(p,n)});return n=d.minmax_tree_process_level(t,f,n,s),n}static minmax_tree(t,e,n){let s=new Pt,l=[e.index.root],o=n<Number.POSITIVE_INFINITY?n*n:Number.POSITIVE_INFINITY;return o=d.minmax_tree_process_level(t,l,o,s),s}static minmax_tree_calc_distance(t,e,n){let s,l;if(e!=null&&!e.isNil()){if([s,l]=d.minmax_tree_calc_distance(t,e.left,n),l)return[s,l];if(i.Utils.LT(s[0],Math.sqrt(e.item.key.low)))return[s,!0];let[o,a]=d.distance(t,e.item.value);return i.Utils.LT(o,s[0])&&(s=[o,a]),[s,l]=d.minmax_tree_calc_distance(t,e.right,s),[s,l]}return[n,!1]}static shape2planarSet(t,e,n=Number.POSITIVE_INFINITY){let s=[n,new i.Segment],l=!1;if(e instanceof i.PlanarSet){let o=d.minmax_tree(t,e,n);[s,l]=d.minmax_tree_calc_distance(t,o.root,s)}return s}static sort(t){t.sort((e,n)=>i.Utils.LT(e[0],n[0])?-1:i.Utils.GT(e[0],n[0])?1:0)}static distance(t,e){return t.distanceTo(e)}}i.Distance=d,i.BooleanOperations=xn,i.Relations=Dn;const He=i.Matrix,Ht=24,qe=60,N=class extends T.Path{constructor(r,t){if(super(),T.Util.setOptions(this,t),r==null)throw Error("latLng required");t=t||{},this._latLng=T.latLng(r),this._heading=t.heading,this._course=t.course,this._speed=t.speed,this._setShapeOptions(t.shapeOptions)}_project(){this._currentShapePoints=this._getProjectedShapePoints(),this._currentLeaderPoints=this._getLeaderShapePoints();const r=new T.Bounds;for(let t=0;t<this._currentShapePoints.length;t++){const e=this._currentShapePoints[t];r.extend(e)}if(this._currentLeaderPoints!==void 0)for(let t=0;t<this._currentLeaderPoints.length;t++){const e=this._currentShapePoints[t];r.extend(e)}this._currentBounds=r,this._currentLatLngBounds=new T.LatLngBounds(this._map.layerPointToLatLng(r.getBottomLeft()),this._map.layerPointToLatLng(r.getTopRight()))}_update(){if(!this._map)return;let r=N._toSVGPath(this._currentShapePoints,!0);this._currentLeaderPoints!==void 0&&(r+=" "+N._toSVGPath(this._currentLeaderPoints,!1)),this.getElement().setAttribute("d",r)}_setShapeOptions(r){this._shapeOptions=r||{leaderTime:qe,defaultShapeSet:N.DEFAULT_SHAPE_SET},this._shapeOptions.leaderTime===void 0&&(this._shapeOptions.leaderTime=qe),this._shapeOptions.defaultShapeSet===void 0&&(this._shapeOptions.defaultShapeSet=N.DEFAULT_SHAPE_SET),this._shapeOptions.shapeSetEntries!==void 0&&this._shapeOptions.shapeSetEntries.sort((t,e)=>e.minZoomLevel-t.minZoomLevel)}setLatLng(r){const t=this._latLng;return this._latLng=T.latLng(r),this.fire("move",{oldLatLng:t,latlng:this._latLng}),this.redraw()}setHeading(r){return this._heading=r,this.redraw()}setCourse(r){return this._course=r,this.redraw()}setSpeed(r){return this._speed=r,this.redraw()}setShapeOptions(r){return this._setShapeOptions(r),this.redraw()}getBounds(){return this._currentLatLngBounds}getLatLng(){return this._latLng}getSpeed(){return this._speed}getHeading(){return this._heading}getCourse(){return this._course}static createShape(r,t){return{points:r,length:t,breadth:t,units:"pixels"}}static createShapeSet(r){return{withHeading:N.createShape(N.DEFAULT_HEADING_SHAPE_POINTS,r),withoutHeading:N.createShape(N.DEFAULT_NOHEADING_SHAPE_POINTS,r)}}_getLatSizeOf(r){return r/40075017*360}_getLngSizeOf(r){return r/40075017*360/Math.cos(Math.PI/180*this._latLng.lat)}_getViewAngleFromModel(r){return r-Math.PI/2}_getLeaderShapePoints(){if(this._course===void 0||this._speed===void 0)return;const r=this._getViewAngleFromModel(this._course),t=this._speed*this._shapeOptions.leaderTime,e=this._calcRelativeLatLng(this._latLng,t,r);return this._latLngsToLayerPoints(this._latLng,e)}_calcRelativeLatLng(r,t,e){return new T.LatLng(r.lat-this._getLatSizeOf(t*Math.sin(e)),r.lng+this._getLngSizeOf(t*Math.cos(e)))}_latLngsToLayerPoints(...r){return r.map(t=>this._map.latLngToLayerPoint(t))}_getShapeSet(){if(this._shapeOptions.shapeSetEntries===void 0||this._shapeOptions.shapeSetEntries.length==0)return this._shapeOptions.defaultShapeSet;const r=this._map.getZoom(),t=this._shapeOptions.shapeSetEntries.sort((e,n)=>n.minZoomLevel-e.minZoomLevel).filter(e=>r>=e.minZoomLevel);return t.length>0?t[0].shapeSet:this._shapeOptions.defaultShapeSet}_getShape(){const r=this._getShapeSet();return this._heading!==void 0?r.withHeading:r.withoutHeading}_getTransformedShapePoints(){const r=this._getShape();let t=new He;if(this._heading!==void 0){const n=this._getViewAngleFromModel(this._heading);t=t.rotate(n)}return r.center!==void 0&&(t=t.translate(-r.center[0],-r.center[1])),t=t.scale(r.length,r.breadth),[r.points.map(n=>t.transform(n)),r.units]}_getProjectedShapePoints(){const[r,t]=this._getTransformedShapePoints();switch(t){case"pixels":{const e=this._map.latLngToLayerPoint(this._latLng),n=new He().translate(e.x,e.y);return r.map(s=>{const l=n.transform(s);return new T.Point(l[0],l[1])})}case"meters":return r.map(e=>this._map.latLngToLayerPoint(new T.LatLng(this._latLng.lat-this._getLatSizeOf(e[1]),this._latLng.lng+this._getLngSizeOf(e[0]))))}}static _toSVGPath(r,t){let e="";for(let n=0;n<r.length;n++){const s=r[n];e===""?e=`M ${s.x} ${s.y} `:e+=`L ${s.x} ${s.y} `}return t&&(e+="Z"),e}};let C=N;C.DEFAULT_HEADING_SHAPE_POINTS=[[.75,0],[-.25,.3],[-.25,-.3]],C.DEFAULT_NOHEADING_SHAPE_POINTS=[[.3,0],[0,.3],[-.3,0],[0,-.3]],C.DEFAULT_SHAPE_SET={withHeading:{points:N.DEFAULT_HEADING_SHAPE_POINTS,length:Ht,breadth:Ht,units:"pixels"},withoutHeading:{points:N.DEFAULT_NOHEADING_SHAPE_POINTS,length:Ht,breadth:Ht,units:"pixels"}};const hi=24,ui=14,ci=60,di=1.944,Ge=102.3,De=360,ze=360,We="#000000",Qe="#d3d3d3",R="#000000",k="#d3d3d3",tt="#8b008b",et="#ff00ff",V="#00008b",H="#ffff00",J="#008b8b",K="#00ffff",q="#00008b",G="#0000ff",D="#006400",z="#90ee90",W="#8b0000",Q="#ff0000",Y="#008b8b",j="#00ffff",Ye={0:c("Not available",R,k),20:c("Wing in ground (WIG), all ships of this type",R,k),21:c("Wing in ground (WIG), Hazardous category A",R,k),22:c("Wing in ground (WIG), Hazardous category B",R,k),23:c("Wing in ground (WIG), Hazardous category C",R,k),24:c("Wing in ground (WIG), Hazardous category D",R,k),25:c("Wing in ground (WIG), Reserved for future use",R,k),26:c("Wing in ground (WIG), Reserved for future use",R,k),27:c("Wing in ground (WIG), Reserved for future use",R,k),28:c("Wing in ground (WIG), Reserved for future use",R,k),29:c("Wing in ground (WIG), Reserved for future use",R,k),30:c("Fishing",tt,et),31:c("Towing",tt,et),32:c("Towing: length exceeds 200m or breadth exceeds 25m",tt,et),33:c("Dredging or underwater ops",tt,et),34:c("Diving ops",tt,et),35:c("Military ops",tt,et),36:c("Sailing",tt,et),37:c("Pleasure Craft",tt,et),40:c("High speed craft (HSC), all ships of this type",V,H),41:c("High speed craft (HSC), Hazardous category A",V,H),42:c("High speed craft (HSC), Hazardous category B",V,H),43:c("High speed craft (HSC), Hazardous category C",V,H),44:c("High speed craft (HSC), Hazardous category D",V,H),45:c("High speed craft (HSC), Reserved for future use",V,H),46:c("High speed craft (HSC), Reserved for future use",V,H),47:c("High speed craft (HSC), Reserved for future use",V,H),48:c("High speed craft (HSC), Reserved for future use",V,H),49:c("High speed craft (HSC), No additional information",V,H),50:c("Pilot Vessel",J,K),51:c("Search and Rescue vessel",J,K),52:c("Tug",J,K),53:c("Port Tender",J,K),54:c("Anti-pollution equipment",J,K),55:c("Law Enforcement",J,K),56:c("Spare - Local Vessel",J,K),57:c("Spare - Local Vessel",J,K),58:c("Medical Transport",J,K),59:c("Noncombatant ship according to RR Resolution No. 18","",""),60:c("Passenger, all ships of this type",q,G),61:c("Passenger, Hazardous category A",q,G),62:c("Passenger, Hazardous category B",q,G),63:c("Passenger, Hazardous category C",q,G),64:c("Passenger, Hazardous category D",q,G),65:c("Passenger, Reserved for future use",q,G),66:c("Passenger, Reserved for future use",q,G),67:c("Passenger, Reserved for future use",q,G),68:c("Passenger, Reserved for future use",q,G),69:c("Passenger, No additional information",q,G),70:c("Cargo, all ships of this type",D,z),71:c("Cargo, Hazardous category A",D,z),72:c("Cargo, Hazardous category B",D,z),73:c("Cargo, Hazardous category C",D,z),74:c("Cargo, Hazardous category D",D,z),75:c("Cargo, Reserved for future use",D,z),76:c("Cargo, Reserved for future use",D,z),77:c("Cargo, Reserved for future use",D,z),78:c("Cargo, Reserved for future use",D,z),79:c("Cargo, No additional information",D,z),80:c("Tanker, all ships of this type",W,Q),81:c("Tanker, Hazardous category A",W,Q),82:c("Tanker, Hazardous category B",W,Q),83:c("Tanker, Hazardous category C",W,Q),84:c("Tanker, Hazardous category D",W,Q),85:c("Tanker, Reserved for future use",W,Q),86:c("Tanker, Reserved for future use",W,Q),87:c("Tanker, Reserved for future use",W,Q),88:c("Tanker, Reserved for future use",W,Q),89:c("Tanker, No additional information",W,Q),90:c("Other Type, all ships of this type",Y,j),91:c("Other Type, Hazardous category A",Y,j),92:c("Other Type, Hazardous category B",Y,j),93:c("Other Type, Hazardous category C",Y,j),94:c("Other Type, Hazardous category D",Y,j),95:c("Other Type, Reserved for future use",Y,j),96:c("Other Type, Reserved for future use",Y,j),97:c("Other Type, Reserved for future use",Y,j),98:c("Other Type, Reserved for future use",Y,j),99:c("Other Type, no additional information",Y,j)},pi=c("Reserved",We,Qe),gi=c("Unknown",We,Qe),qt=class extends C{constructor(r,t){super([r.latitude,r.longitude],t),T.Util.setOptions(this,t),t=t||{},this._leaderTime=t.leaderTime||ci,this._minZoomLevel=t.minZoomLevel||ui,this._size=t.size||hi,this.setPositionReport(r),this.setShipStaticData(t.shipStaticData)}setPositionReport(r){return this._positionReport=r,this.setLatLng([r.latitude,r.longitude]),!w(r.trueHeading)&&r.trueHeading<ze?this.setHeading(je(r.trueHeading)):this.setHeading(void 0),!w(r.cog)&&r.cog<De?this.setCourse(je(r.cog)):this.setCourse(void 0),!w(r.sog)&&r.sog<Ge?this.setSpeed(r.sog/di):this.setSpeed(void 0),this.bindPopup(this._getPopupContent(this._positionReport,this._shipStaticData)),this.redraw()}setShipStaticData(r){this._shipStaticData=r;const t=!w(r)&&!w(r.type)?Ze(r.type):Ye[0];return this.setStyle({color:t.color,fill:!0,fillOpacity:1,fillColor:t.fillColor}),this.bindPopup(this._getPopupContent(this._positionReport,this._shipStaticData)),this.setShapeOptions(qt._getShapeOptions(this._leaderTime,this._minZoomLevel,this._size,r))}static _getShapeOptions(r,t,e,n){const s={leaderTime:r,defaultShapeSet:C.createShapeSet(e)},l=qt._getShapeSet(e,n);return l!==null&&(s.shapeSetEntries=[{shapeSet:l,minZoomLevel:t}]),s}static _getShapeSet(r,t){return w(t)||w(t.dimension)||!Xe(t.dimension)?null:{withHeading:{points:qt.DEFAULT_SILHOUETTE_SHAPE_POINTS,center:[t.dimension.B,t.dimension.D],length:t.dimension.A+t.dimension.B,breadth:t.dimension.C+t.dimension.D,units:"meters"},withoutHeading:C.createShape(C.DEFAULT_NOHEADING_SHAPE_POINTS,r)}}_getPopupContent(r,t){let e="<table>";w(t)||(e+=A("User ID",t.userId),e+=A("IMO Number",t.imoNumber),e+=A("Call sign",t.callSign),e+=A("Name",t.name)),w(r)||(e+=A("Location",`${r.latitude.toFixed(5)}, ${r.longitude.toFixed(5)}`),e+=A("SOG",!w(r.sog)&&r.sog<Ge?r.sog.toFixed(2):void 0,"knots"),e+=A("COG",!w(r.cog)&&r.cog<De?r.cog.toFixed(1):void 0,"°"),e+=A("Heading",!w(r.trueHeading)&&r.trueHeading<ze?r.trueHeading.toFixed(1):void 0,"°"),e+=A("Navigation status",Ei(r.navigationalStatus))),w(t)||(e+=A("Type",_i(t.type)),!w(t.dimension)&&Xe(t.dimension)&&(e+=A("Ship length",t.dimension.A+t.dimension.B,"m"),e+=A("Ship width",t.dimension.C+t.dimension.D,"m")),e+=A("Fix type",mi(t.fixType)),e+=A("ETA",xi(t.eta)),e+=A("Maximum static draught",w(t.maximumStaticDraught)?void 0:t.maximumStaticDraught.toFixed(1),"m"),e+=A("Destination",t.destination),e+=A("DTE",t.dte)),e+="</table>";const n=T.DomUtil.create("div");return n.innerHTML=e,n}};let Gt=qt;Gt.DEFAULT_SILHOUETTE_SHAPE_POINTS=[[1,.5],[.75,1],[0,1],[0,0],[.75,0]];function _i(r){return w(r)?void 0:Ze(r).name}function mi(r){if(!w(r))switch(r){case 0:return;case 1:return"GPS";case 2:return"GLONASS";case 3:return"combined GPS/GLONASS";case 4:return"Loran-C";case 5:return"Chayka";case 6:return"integrated navigation system";case 7:return"surveyed";case 8:return"Galileo";case 9:case 10:case 11:case 12:case 13:case 14:return`not used (${r})`;case 15:return"internal GNSS";default:return`unknown (${r})`}}function Ei(r){if(!w(r))switch(r){case 0:return"Under way using engine";case 1:return"At anchor";case 2:return"Not under command";case 3:return"Restricted manoeuverability";case 4:return"Constrained by her draught";case 5:return"Moored";case 6:return"Aground";case 7:return"Engaged in Fishing";case 8:return"Under way sailing";case 9:return"Reserved for future amendment of Navigational Status for HSC";case 10:return"Reserved for future amendment of Navigational Status for WIG";case 11:return"Reserved for future use";case 12:return"Reserved for future use";case 13:return"Reserved for future use";case 14:return"AIS-SART is active";case 15:return"Not defined (default)";default:return`unknown (${r})`}}function xi(r){if(!w(r))return`${r.month.toString().padStart(2,"0")}/${r.day.toString().padStart(2,"0")} ${r.hour.toString().padStart(2,"0")}:${r.minute.toString().padStart(2,"0")} UTC`}function je(r){if(r!=null)return r*Math.PI/180}function w(r){return r==null}function Xe(r){return!w(r)&&r.A>0&&r.B>0&&r.C>0&&r.D>0}function A(r,t,e){if(w(t))return"";const n=String(t);return`<tr><td>${r}</td><td>${n} ${w(e)?"":e}</td></tr>`}function c(r,t,e){return{name:r,color:t,fillColor:e}}function Ze(r){if(r<0||r>99)return gi;const t=Ye[r];return w(t)?pi:t}T.trackSymbol=function(r,t){return new C(r,t)},T.TrackSymbol=C,T.aisTrackSymbol=function(r,t){return new Gt(r,t)},T.AISTrackSymbol=Gt,Z.AISTrackSymbol=Gt,Z.TrackSymbol=C,Z.default=C,Object.defineProperties(Z,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
//# sourceMappingURL=leaflet-tracksymbol2.umd.js.map
